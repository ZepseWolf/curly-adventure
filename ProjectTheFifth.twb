<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.18.0108.1735                               -->
<workbook original-version='10.4' source-build='10.4.3 (10400.18.0108.1735)' source-platform='win' version='10.4' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='SpeedCameras (ProjectTheFifth)' inline='true' name='federated.01t06k91ijdnc71554a9b1ffizpc' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Project' name='excel-direct.1gufrnr1ndtwn116wv4a61sojixx'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Douglascat/Desktop/Project.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1gufrnr1ndtwn116wv4a61sojixx' name='Andrew-SpeedCameras' table='[&apos;Andrew-SpeedCameras$&apos;]' type='table'>
          <columns gridOrigin='A1:D319:no:A1:D319:0' header='yes' outcome='6'>
            <column datatype='string' name='Camera Type' ordinal='0' />
            <column datatype='string' name='Location' ordinal='1' />
            <column datatype='real' name='Latitude' ordinal='2' />
            <column datatype='real' name='Longitude' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Camera Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Camera Type]</local-name>
            <parent-name>[Andrew-SpeedCameras]</parent-name>
            <remote-alias>Camera Type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Andrew-SpeedCameras]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Andrew-SpeedCameras]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Andrew-SpeedCameras]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Andrew-SpeedCameras]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D319:no:A1:D319:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Camera Type1' datatype='string' name='[Camera Type]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude1' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Location1' datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Longitude1' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Camera Type]' derivation='None' name='[none:Camera Type:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.479657' measure-ordering='alphabetic' measure-percentage='0.520343' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Camera Type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;PSLC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Red Light&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fixed&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Ashley-Amenities+ (Project)' inline='true' name='federated.0ib5dxi10iusx617dhhv300meoup' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Project' name='excel-direct.0ck9yrf11ibmle11azfy31bgpakj'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Douglascat/Desktop/Project.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Ashley-Amenities].[District]' />
              <expression op='[Ashley- resale].[District]' />
            </expression>
          </clause>
          <relation connection='excel-direct.0ck9yrf11ibmle11azfy31bgpakj' name='Ashley-Amenities' table='[&apos;Ashley-Amenities$&apos;]' type='table'>
            <columns gridOrigin='A1:F25:no:A1:F25:0' header='yes' outcome='2'>
              <column datatype='string' name='District' ordinal='0' />
              <column datatype='integer' name='Pricing' ordinal='1' />
              <column datatype='string' name='Amenities' ordinal='2' />
              <column datatype='real' name='Latitude' ordinal='3' />
              <column datatype='real' name='Longitude' ordinal='4' />
              <column datatype='integer' name='Count' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.0ck9yrf11ibmle11azfy31bgpakj' name='Ashley- resale' table='[&apos;Ashley- resale$&apos;]' type='table'>
            <columns gridOrigin='A1:F25:no:A1:F25:0' header='yes' outcome='6'>
              <column datatype='string' name='District' ordinal='0' />
              <column datatype='integer' name='Town' ordinal='1' />
              <column datatype='integer' name='Q42014' ordinal='2' />
              <column datatype='integer' name='Q42015' ordinal='3' />
              <column datatype='integer' name='Q42016' ordinal='4' />
              <column datatype='real' name='Q12017' ordinal='5' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Amenities]' value='[Ashley-Amenities].[Amenities]' />
          <map key='[Count]' value='[Ashley-Amenities].[Count]' />
          <map key='[District (Ashley- resale)]' value='[Ashley- resale].[District]' />
          <map key='[District]' value='[Ashley-Amenities].[District]' />
          <map key='[Latitude]' value='[Ashley-Amenities].[Latitude]' />
          <map key='[Longitude]' value='[Ashley-Amenities].[Longitude]' />
          <map key='[Pricing]' value='[Ashley-Amenities].[Pricing]' />
          <map key='[Q12017]' value='[Ashley- resale].[Q12017]' />
          <map key='[Q42014]' value='[Ashley- resale].[Q42014]' />
          <map key='[Q42015]' value='[Ashley- resale].[Q42015]' />
          <map key='[Q42016]' value='[Ashley- resale].[Q42016]' />
          <map key='[Town]' value='[Ashley- resale].[Town]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>District</remote-name>
            <remote-type>130</remote-type>
            <local-name>[District]</local-name>
            <parent-name>[Ashley-Amenities]</parent-name>
            <remote-alias>District</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pricing</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pricing]</local-name>
            <parent-name>[Ashley-Amenities]</parent-name>
            <remote-alias>Pricing</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Amenities</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Amenities]</local-name>
            <parent-name>[Ashley-Amenities]</parent-name>
            <remote-alias>Amenities</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Ashley-Amenities]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Ashley-Amenities]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Count]</local-name>
            <parent-name>[Ashley-Amenities]</parent-name>
            <remote-alias>Count</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Ashley-Amenities]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F25:no:A1:F25:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>District</remote-name>
            <remote-type>130</remote-type>
            <local-name>[District (Ashley- resale)]</local-name>
            <parent-name>[Ashley- resale]</parent-name>
            <remote-alias>District</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Town</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Town]</local-name>
            <parent-name>[Ashley- resale]</parent-name>
            <remote-alias>Town</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q42014</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Q42014]</local-name>
            <parent-name>[Ashley- resale]</parent-name>
            <remote-alias>Q42014</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q42015</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Q42015]</local-name>
            <parent-name>[Ashley- resale]</parent-name>
            <remote-alias>Q42015</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q42016</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Q42016]</local-name>
            <parent-name>[Ashley- resale]</parent-name>
            <remote-alias>Q42016</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q12017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q12017]</local-name>
            <parent-name>[Ashley- resale]</parent-name>
            <remote-alias>Q12017</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Ashley- resale]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F25:no:A1:F25:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Region' datatype='string' name='[District (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[District]' new-bin='true'>
          <bin default-name='false' value='&quot;Central&quot;'>
            <value>&quot;Bukit Merah&quot;</value>
            <value>&quot;Central&quot;</value>
            <value>&quot;Geylang&quot;</value>
            <value>&quot;Kallang/Whampoa&quot;</value>
            <value>&quot;Queenstown&quot;</value>
            <value>&quot;Toa Payoh&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;East&quot;'>
            <value>&quot;Bedok&quot;</value>
            <value>&quot;Pasir Ris&quot;</value>
            <value>&quot;Tampines&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;North&quot;'>
            <value>&quot;Ang Mo Kio&quot;</value>
            <value>&quot;Bishan&quot;</value>
            <value>&quot;Hougang&quot;</value>
            <value>&quot;Punggol&quot;</value>
            <value>&quot;Sembawang&quot;</value>
            <value>&quot;Sengkang&quot;</value>
            <value>&quot;Serangoon&quot;</value>
            <value>&quot;Woodlands&quot;</value>
            <value>&quot;Yishun&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;West&quot;'>
            <value>&quot;Bukit Batok&quot;</value>
            <value>&quot;Bukit Panjang&quot;</value>
            <value>&quot;Choa Chu Kang&quot;</value>
            <value>&quot;Clementi&quot;</value>
            <value>&quot;Jurong East&quot;</value>
            <value>&quot;Jurong West&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[District]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Pricing]' role='measure' type='quantitative' />
      <column datatype='real' name='[Q12017]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Q42014]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Q42015]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Q42016]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Town]' role='measure' type='quantitative' />
      <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[District]' derivation='None' name='[none:District:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pricing]' derivation='Sum' name='[sum:Pricing:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Q12017]' derivation='Sum' name='[sum:Q12017:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Q42014]' derivation='Sum' name='[sum:Q42014:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Q42015]' derivation='Sum' name='[sum:Q42015:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Q42016]' derivation='Sum' name='[sum:Q42016:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Town]' derivation='Sum' name='[sum:Town:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.384755' measure-ordering='alphabetic' measure-percentage='0.615245' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Q42014:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Q12017:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Town:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Pricing:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[avg:Longitude:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0ib5dxi10iusx617dhhv300meoup]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Q42016:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[avg:Latitude:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Q42015:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Number of Records:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Q42014:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Q12017:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Town:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Pricing:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[avg:Longitude:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0ib5dxi10iusx617dhhv300meoup]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Q42016:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[avg:Latitude:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Q42015:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Number of Records:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:District:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Clementi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ang Mo Kio&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tampines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bukit Merah&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jurong West&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Geylang&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bukit Panjang&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sengkang&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bedok&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Toa Payoh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Queenstown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kallang/Whampoa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pasir Ris&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sembawang&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Serangoon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hougang&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Choa Chu Kang&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bishan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Woodlands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Punggol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jurong East&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bukit Batok&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yishun&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:District:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Clementi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ang Mo Kio&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tampines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bukit Merah&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jurong West&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Geylang&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bukit Panjang&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sengkang&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bedok&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Toa Payoh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Queenstown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kallang/Whampoa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pasir Ris&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sembawang&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Serangoon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hougang&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Choa Chu Kang&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bishan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Woodlands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Punggol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jurong East&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bukit Batok&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yishun&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Ashley-Property district postal (Project)' inline='true' name='federated.0tfqfj61y7l42d143oyle1sk8eza' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Project' name='excel-direct.1s33egm0br8ru31b4xsts116qamw'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Douglascat/Desktop/Project.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1s33egm0br8ru31b4xsts116qamw' name='Ashley-Property district postal' table='[&apos;Ashley-Property district postal$&apos;]' type='table'>
          <columns gridOrigin='A1:F26:no:A1:F26:0' header='yes' outcome='2'>
            <column datatype='string' name='Postal District' ordinal='0' />
            <column datatype='integer' name='2014 YTD' ordinal='1' />
            <column datatype='integer' name='2015 YTD' ordinal='2' />
            <column datatype='integer' name='2016 YTD' ordinal='3' />
            <column datatype='integer' name='2017 YTD' ordinal='4' />
            <column datatype='real' name='% Chg' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Postal District</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal District]</local-name>
            <parent-name>[Ashley-Property district postal]</parent-name>
            <remote-alias>Postal District</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2014 YTD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2014 YTD]</local-name>
            <parent-name>[Ashley-Property district postal]</parent-name>
            <remote-alias>2014 YTD</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2015 YTD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2015 YTD]</local-name>
            <parent-name>[Ashley-Property district postal]</parent-name>
            <remote-alias>2015 YTD</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2016 YTD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2016 YTD]</local-name>
            <parent-name>[Ashley-Property district postal]</parent-name>
            <remote-alias>2016 YTD</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2017 YTD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2017 YTD]</local-name>
            <parent-name>[Ashley-Property district postal]</parent-name>
            <remote-alias>2017 YTD</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% Chg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% Chg]</local-name>
            <parent-name>[Ashley-Property district postal]</parent-name>
            <remote-alias>% Chg</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Ashley-Property district postal]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F26:no:A1:F26:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[% Chg]' role='measure' type='quantitative' />
      <column caption='2014 Ytd' datatype='integer' name='[2014 YTD]' role='measure' type='quantitative' />
      <column caption='2015 Ytd' datatype='integer' name='[2015 YTD]' role='measure' type='quantitative'>
        <aliases>
          <alias key='%null%' value='3000' />
        </aliases>
      </column>
      <column caption='2016 Ytd' datatype='integer' name='[2016 YTD]' role='measure' type='quantitative' />
      <column caption='2017 Ytd' datatype='integer' name='[2017 YTD]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Postal District (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Postal District]' new-bin='true'>
          <bin default-name='false' value='&quot;Central&quot;'>
            <value>&quot;1&quot;</value>
            <value>&quot;10&quot;</value>
            <value>&quot;11&quot;</value>
            <value>&quot;12&quot;</value>
            <value>&quot;13&quot;</value>
            <value>&quot;14&quot;</value>
            <value>&quot;15&quot;</value>
            <value>&quot;2&quot;</value>
            <value>&quot;21&quot;</value>
            <value>&quot;3&quot;</value>
            <value>&quot;4&quot;</value>
            <value>&quot;5&quot;</value>
            <value>&quot;8&quot;</value>
            <value>&quot;9&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;East&quot;'>
            <value>&quot;16&quot;</value>
            <value>&quot;17&quot;</value>
            <value>&quot;18&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;North&quot;'>
            <value>&quot;25&quot;</value>
            <value>&quot;26&quot;</value>
            <value>&quot;27&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;North-East&quot;'>
            <value>&quot;19&quot;</value>
            <value>&quot;20&quot;</value>
            <value>&quot;28&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;West&quot;'>
            <value>&quot;22&quot;</value>
            <value>&quot;23&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Postal District]' role='dimension' type='nominal' />
      <column-instance column='[% Chg]' derivation='Sum' name='[sum:% Chg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2014 YTD]' derivation='Sum' name='[sum:2014 YTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2015 YTD]' derivation='Sum' name='[sum:2015 YTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2016 YTD]' derivation='Sum' name='[sum:2016 YTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2017 YTD]' derivation='Sum' name='[sum:2017 YTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.426573' measure-ordering='alphabetic' measure-percentage='0.573427' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0tfqfj61y7l42d143oyle1sk8eza].[sum:2014 YTD:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0tfqfj61y7l42d143oyle1sk8eza].[sum:2017 YTD:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0tfqfj61y7l42d143oyle1sk8eza].[sum:2016 YTD:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0tfqfj61y7l42d143oyle1sk8eza].[sum:\% Chg:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0tfqfj61y7l42d143oyle1sk8eza].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0tfqfj61y7l42d143oyle1sk8eza].[sum:2015 YTD:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Ashley-Private property price (Project)' inline='true' name='federated.1lqojyt193u9401gt8rog1y21re2' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Project' name='excel-direct.0bzlpu40c8x2o71f1inoq026r8y3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Douglascat/Desktop/Project.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0bzlpu40c8x2o71f1inoq026r8y3' name='Ashley-Private property price' table='[&apos;Ashley-Private property price$&apos;]' type='table'>
          <columns gridOrigin='A1:D172:no:A1:D172:0' header='yes' outcome='6'>
            <column datatype='string' name='Years' ordinal='0' />
            <column datatype='real' name='Residential Properties' ordinal='1' />
            <column datatype='real' name='Landed' ordinal='2' />
            <column datatype='real' name='Non-Landed' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Years</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Years]</local-name>
            <parent-name>[Ashley-Private property price]</parent-name>
            <remote-alias>Years</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Residential Properties</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Residential Properties]</local-name>
            <parent-name>[Ashley-Private property price]</parent-name>
            <remote-alias>Residential Properties</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Landed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Landed]</local-name>
            <parent-name>[Ashley-Private property price]</parent-name>
            <remote-alias>Landed</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Non-Landed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Non-Landed]</local-name>
            <parent-name>[Ashley-Private property price]</parent-name>
            <remote-alias>Non-Landed</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Ashley-Private property price]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D172:no:A1:D172:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='real' name='[Landed]' role='measure' type='quantitative' />
      <column datatype='real' name='[Non-Landed]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Residential Properties]' role='measure' type='quantitative' />
      <column datatype='string' name='[Years]' role='dimension' type='nominal' />
      <column-instance column='[Years]' derivation='None' name='[none:Years:nk]' pivot='key' type='nominal' />
      <column-instance column='[Landed]' derivation='Sum' name='[sum:Landed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Non-Landed]' derivation='Sum' name='[sum:Non-Landed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Residential Properties]' derivation='Sum' name='[sum:Residential Properties:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.442831' measure-ordering='alphabetic' measure-percentage='0.557169' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lqojyt193u9401gt8rog1y21re2].[sum:Landed:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1lqojyt193u9401gt8rog1y21re2].[sum:Residential Properties:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lqojyt193u9401gt8rog1y21re2].[sum:Non-Landed:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Years:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;2014 4Q&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2013 4Q&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2015 3Q&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;2015 2Q&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;2017 3Q&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2014 2Q&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;2016 2Q&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2014 3Q&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2017 1Q&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2014 1Q&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2016 1Q&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2015 4Q&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;2017 2Q&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2016 4Q&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;2016 3Q&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2015 1Q&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Road Accidents' inline='true' name='federated.0liet9u176i8zf1g4x4db0wai1ns' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Project' name='excel-direct.1oeh8t10bt702f1fg5a7p1bq06dz'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Douglascat/Desktop/Project.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1oeh8t10bt702f1fg5a7p1bq06dz' name='Andrew-RoadAccidents' table='[&apos;Andrew-RoadAccidents$&apos;]' type='table'>
          <columns gridOrigin='A1:U108:no:A1:U108:0' header='yes' outcome='6'>
            <column datatype='string' name='Date' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='string' name='Month' ordinal='2' />
            <column datatype='integer' name='Total Casualties Fatalities' ordinal='3' />
            <column datatype='integer' name='Pedestrians Fatalities' ordinal='4' />
            <column datatype='integer' name='Cyclists &amp; Pillions Fatalities' ordinal='5' />
            <column datatype='integer' name='Motor Cyclists &amp; Pillion Riders Fatalities' ordinal='6' />
            <column datatype='integer' name='Motor Vehicle Drivers &amp; Passengers Cars &amp; Station Wagons Fatalit' ordinal='7' />
            <column datatype='integer' name='Goods Vans &amp; Pick-ups Fatalities' ordinal='8' />
            <column datatype='integer' name='Lorries, Tipper Trucks &amp; Trailers Fatalities' ordinal='9' />
            <column datatype='integer' name='Buses Fatalities' ordinal='10' />
            <column datatype='integer' name='Others Fatalities' ordinal='11' />
            <column datatype='integer' name='Total Casualties Injured' ordinal='12' />
            <column datatype='integer' name='Pedestrians Injured' ordinal='13' />
            <column datatype='integer' name='Cyclists &amp; Pillions Injured' ordinal='14' />
            <column datatype='integer' name='Motor Cyclists &amp; Pillion Riders Injured' ordinal='15' />
            <column datatype='integer' name='Motor Vehicle Drivers &amp; Passengers Cars &amp; Station Wagons Injured' ordinal='16' />
            <column datatype='integer' name='Goods Vans &amp; Pick-ups Injured' ordinal='17' />
            <column datatype='integer' name='Lorries, Tipper Trucks &amp; Trailers Injured' ordinal='18' />
            <column datatype='integer' name='Buses Injured' ordinal='19' />
            <column datatype='integer' name='Others Injured' ordinal='20' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Andrew-RoadAccidents]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Andrew-RoadAccidents]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[Andrew-RoadAccidents]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Casualties Fatalities</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Casualties Fatalities]</local-name>
            <parent-name>[Andrew-RoadAccidents]</parent-name>
            <remote-alias>Total Casualties Fatalities</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pedestrians Fatalities</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pedestrians Fatalities]</local-name>
            <parent-name>[Andrew-RoadAccidents]</parent-name>
            <remote-alias>Pedestrians Fatalities</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cyclists &amp; Pillions Fatalities</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cyclists &amp; Pillions Fatalities]</local-name>
            <parent-name>[Andrew-RoadAccidents]</parent-name>
            <remote-alias>Cyclists &amp; Pillions Fatalities</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Motor Cyclists &amp; Pillion Riders Fatalities</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Motor Cyclists &amp; Pillion Riders Fatalities]</local-name>
            <parent-name>[Andrew-RoadAccidents]</parent-name>
            <remote-alias>Motor Cyclists &amp; Pillion Riders Fatalities</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Motor Vehicle Drivers &amp; Passengers Cars &amp; Station Wagons Fatalit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Motor Vehicle Drivers &amp; Passengers Cars &amp; Station Wagons Fatalit]</local-name>
            <parent-name>[Andrew-RoadAccidents]</parent-name>
            <remote-alias>Motor Vehicle Drivers &amp; Passengers Cars &amp; Station Wagons Fatalit</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Goods Vans &amp; Pick-ups Fatalities</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Goods Vans &amp; Pick-ups Fatalities]</local-name>
            <parent-name>[Andrew-RoadAccidents]</parent-name>
            <remote-alias>Goods Vans &amp; Pick-ups Fatalities</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lorries, Tipper Trucks &amp; Trailers Fatalities</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Lorries, Tipper Trucks &amp; Trailers Fatalities]</local-name>
            <parent-name>[Andrew-RoadAccidents]</parent-name>
            <remote-alias>Lorries, Tipper Trucks &amp; Trailers Fatalities</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Buses Fatalities</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Buses Fatalities]</local-name>
            <parent-name>[Andrew-RoadAccidents]</parent-name>
            <remote-alias>Buses Fatalities</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Others Fatalities</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Others Fatalities]</local-name>
            <parent-name>[Andrew-RoadAccidents]</parent-name>
            <remote-alias>Others Fatalities</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Casualties Injured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Casualties Injured]</local-name>
            <parent-name>[Andrew-RoadAccidents]</parent-name>
            <remote-alias>Total Casualties Injured</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pedestrians Injured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pedestrians Injured]</local-name>
            <parent-name>[Andrew-RoadAccidents]</parent-name>
            <remote-alias>Pedestrians Injured</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cyclists &amp; Pillions Injured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cyclists &amp; Pillions Injured]</local-name>
            <parent-name>[Andrew-RoadAccidents]</parent-name>
            <remote-alias>Cyclists &amp; Pillions Injured</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Motor Cyclists &amp; Pillion Riders Injured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Motor Cyclists &amp; Pillion Riders Injured]</local-name>
            <parent-name>[Andrew-RoadAccidents]</parent-name>
            <remote-alias>Motor Cyclists &amp; Pillion Riders Injured</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Motor Vehicle Drivers &amp; Passengers Cars &amp; Station Wagons Injured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Motor Vehicle Drivers &amp; Passengers Cars &amp; Station Wagons Injured]</local-name>
            <parent-name>[Andrew-RoadAccidents]</parent-name>
            <remote-alias>Motor Vehicle Drivers &amp; Passengers Cars &amp; Station Wagons Injured</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Goods Vans &amp; Pick-ups Injured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Goods Vans &amp; Pick-ups Injured]</local-name>
            <parent-name>[Andrew-RoadAccidents]</parent-name>
            <remote-alias>Goods Vans &amp; Pick-ups Injured</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lorries, Tipper Trucks &amp; Trailers Injured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Lorries, Tipper Trucks &amp; Trailers Injured]</local-name>
            <parent-name>[Andrew-RoadAccidents]</parent-name>
            <remote-alias>Lorries, Tipper Trucks &amp; Trailers Injured</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Buses Injured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Buses Injured]</local-name>
            <parent-name>[Andrew-RoadAccidents]</parent-name>
            <remote-alias>Buses Injured</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Others Injured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Others Injured]</local-name>
            <parent-name>[Andrew-RoadAccidents]</parent-name>
            <remote-alias>Others Injured</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Andrew-RoadAccidents]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U108:no:A1:U108:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Buses Fatalities]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Buses Injured]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Cyclists &amp; Pillions Fatalities]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Cyclists &amp; Pillions Injured]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Goods Vans &amp; Pick-ups Fatalities]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Goods Vans &amp; Pick-ups Injured]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Lorries, Tipper Trucks &amp; Trailers Fatalities]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Lorries, Tipper Trucks &amp; Trailers Injured]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Motor Cyclists &amp; Pillion Riders Fatalities]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Motor Cyclists &amp; Pillion Riders Injured]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Motor Vehicle Drivers &amp; Passengers Cars &amp; Station Wagons Fatalit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Motor Vehicle Drivers &amp; Passengers Cars &amp; Station Wagons Injured]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Others Fatalities]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Others Injured]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Pedestrians Fatalities]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Pedestrians Injured]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Casualties Fatalities]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Casualties Injured]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Buses Fatalities]' derivation='Sum' name='[sum:Buses Fatalities:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Buses Injured]' derivation='Sum' name='[sum:Buses Injured:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cyclists &amp; Pillions Fatalities]' derivation='Sum' name='[sum:Cyclists &amp; Pillions Fatalities:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cyclists &amp; Pillions Injured]' derivation='Sum' name='[sum:Cyclists &amp; Pillions Injured:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Goods Vans &amp; Pick-ups Fatalities]' derivation='Sum' name='[sum:Goods Vans &amp; Pick-ups Fatalities:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Goods Vans &amp; Pick-ups Injured]' derivation='Sum' name='[sum:Goods Vans &amp; Pick-ups Injured:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Lorries, Tipper Trucks &amp; Trailers Fatalities]' derivation='Sum' name='[sum:Lorries, Tipper Trucks &amp; Trailers Fatalities:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Lorries, Tipper Trucks &amp; Trailers Injured]' derivation='Sum' name='[sum:Lorries, Tipper Trucks &amp; Trailers Injured:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Motor Cyclists &amp; Pillion Riders Fatalities]' derivation='Sum' name='[sum:Motor Cyclists &amp; Pillion Riders Fatalities:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Motor Cyclists &amp; Pillion Riders Injured]' derivation='Sum' name='[sum:Motor Cyclists &amp; Pillion Riders Injured:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Motor Vehicle Drivers &amp; Passengers Cars &amp; Station Wagons Fatalit]' derivation='Sum' name='[sum:Motor Vehicle Drivers &amp; Passengers Cars &amp; Station Wagons Fatalit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Motor Vehicle Drivers &amp; Passengers Cars &amp; Station Wagons Injured]' derivation='Sum' name='[sum:Motor Vehicle Drivers &amp; Passengers Cars &amp; Station Wagons Injured:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Others Fatalities]' derivation='Sum' name='[sum:Others Fatalities:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Others Injured]' derivation='Sum' name='[sum:Others Injured:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pedestrians Fatalities]' derivation='Sum' name='[sum:Pedestrians Fatalities:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pedestrians Injured]' derivation='Sum' name='[sum:Pedestrians Injured:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Casualties Fatalities]' derivation='Sum' name='[sum:Total Casualties Fatalities:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Casualties Injured]' derivation='Sum' name='[sum:Total Casualties Injured:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Year1)' hidden='true' name='[Action (Year1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.168959' measure-ordering='alphabetic' measure-percentage='0.831041' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[avg:Buses Injured:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Motor Cyclists &amp; Pillion Riders Fatalities:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Motor Cyclists &amp; Pillion Riders Injured:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Total Casualties Fatalities:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Total Casualties Injured:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Pedestrians Fatalities:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Pedestrians Injured:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Goods Vans &amp; Pick-ups Fatalities:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Goods Vans &amp; Pick-ups Injured:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Buses Fatalities:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Buses Injured:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Lorries, Tipper Trucks &amp; Trailers Fatalities:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Lorries, Tipper Trucks &amp; Trailers Injured:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Others Fatalities:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Others Injured:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Motor Vehicle Drivers &amp; Passengers Cars &amp; Station Wagons Fatalit:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Motor Vehicle Drivers &amp; Passengers Cars &amp; Station Wagons Injured:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Population:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Cyclists &amp; Pillions Fatalities:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Cyclists &amp; Pillions Injured:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='annual-motor-vehicle-population (ProjectTheFifth)' inline='true' name='federated.0zd8x780uveusc0zpvizd1fmmbr4' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Project' name='excel-direct.0hck89y0xvvtdn10bxw4k14a98nb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Douglascat/Desktop/Project.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0hck89y0xvvtdn10bxw4k14a98nb' name='Andrew-annual-motor-vehicle' table='[&apos;Andrew-annual-motor-vehicle$&apos;]' type='table'>
          <columns gridOrigin='A1:D241:no:A1:D241:0' header='yes' outcome='6'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='string' name='category' ordinal='1' />
            <column datatype='string' name='type' ordinal='2' />
            <column datatype='integer' name='number' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Andrew-annual-motor-vehicle]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[Andrew-annual-motor-vehicle]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[Andrew-annual-motor-vehicle]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number]</local-name>
            <parent-name>[Andrew-annual-motor-vehicle]</parent-name>
            <remote-alias>number</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Andrew-annual-motor-vehicle]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D241:no:A1:D241:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
      <column caption='Number' datatype='integer' name='[number]' role='dimension' type='ordinal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Year' datatype='integer' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.565574' measure-ordering='alphabetic' measure-percentage='0.434426' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Motorcycles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tax Exempted Vehicles&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Taxis&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Goods &amp; Other Vehicles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buses&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cars &amp; Station-wagons&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='average-daily-traffic-volume-en (ProjectTheFifth)' inline='true' name='federated.0lldpnq0pi2rm715qv8xw0rxusrz' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Project' name='excel-direct.1x4h2mq0ayojok14cqi8h0wpmmlr'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Douglascat/Desktop/Project.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1x4h2mq0ayojok14cqi8h0wpmmlr' name='Andrew-average-daily-traffic' table='[&apos;Andrew-average-daily-traffic$&apos;]' type='table'>
          <columns gridOrigin='A1:B12:no:A1:B12:0' header='yes' outcome='6'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name='ave_daily_traffic_volume_entering_city' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Andrew-average-daily-traffic]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ave_daily_traffic_volume_entering_city</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ave_daily_traffic_volume_entering_city]</local-name>
            <parent-name>[Andrew-average-daily-traffic]</parent-name>
            <remote-alias>ave_daily_traffic_volume_entering_city</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Andrew-average-daily-traffic]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B12:no:A1:B12:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Ave Daily Traffic Volume Entering City' datatype='integer' name='[ave_daily_traffic_volume_entering_city]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.477459' measure-ordering='alphabetic' measure-percentage='0.522541' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Project' inline='true' name='federated.08jnx0w0zktuzw13mo0io1tcu94m' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Project' name='excel-direct.045473n0jam8081cmpkw90o6z0s3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Douglascat/Desktop/Project.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.045473n0jam8081cmpkw90o6z0s3' name='Renfred- Diabetes' table='[&apos;Renfred- Diabetes$&apos;]' type='table'>
          <columns gridOrigin='A1:E38:no:A1:E38:0' header='yes' outcome='6'>
            <column datatype='string' name='Cause of Hospitalisation' ordinal='0' />
            <column datatype='string' name='Ward Type' ordinal='1' />
            <column datatype='string' name='Hospital' ordinal='2' />
            <column datatype='real' name='Average :ength Of Stay' ordinal='3' />
            <column datatype='integer' name='Average Bill Size ($)' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Cause of Hospitalisation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Cause of Hospitalisation]</local-name>
            <parent-name>[Renfred- Diabetes]</parent-name>
            <remote-alias>Cause of Hospitalisation</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ward Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ward Type]</local-name>
            <parent-name>[Renfred- Diabetes]</parent-name>
            <remote-alias>Ward Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hospital</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Hospital]</local-name>
            <parent-name>[Renfred- Diabetes]</parent-name>
            <remote-alias>Hospital</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average :ength Of Stay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average :ength Of Stay]</local-name>
            <parent-name>[Renfred- Diabetes]</parent-name>
            <remote-alias>Average :ength Of Stay</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Bill Size ($)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Average Bill Size ($)]</local-name>
            <parent-name>[Renfred- Diabetes]</parent-name>
            <remote-alias>Average Bill Size ($)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Renfred- Diabetes]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E38:no:A1:E38:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Count' datatype='real' datatype-customized='true' name='[Average :ength Of Stay]' role='measure' type='quantitative' />
      <column caption='Cause of Hospitalisation1' datatype='string' name='[Cause of Hospitalisation]' role='dimension' type='nominal' />
      <column caption='Hospital1' datatype='string' name='[Hospital]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Ward Type1' datatype='string' name='[Ward Type]' role='dimension' type='nominal' />
      <column-instance column='[Cause of Hospitalisation]' derivation='None' name='[none:Cause of Hospitalisation:nk]' pivot='key' type='nominal' />
      <group caption='Action (Cause of Hospitalisation,Hospital,Ward Type)' hidden='true' name='[Action (Cause of Hospitalisation,Hospital,Ward Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Cause of Hospitalisation]' />
          <groupfilter function='level-members' level='[Hospital]' />
          <groupfilter function='level-members' level='[Ward Type]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.501071' measure-ordering='alphabetic' measure-percentage='0.498929' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Cause of Hospitalisation:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Diabetes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stroke&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Heart Attack&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0ib5dxi10iusx617dhhv300meoup'>
      <datasources>
        <datasource caption='Ashley-Amenities+ (Project)' name='federated.0ib5dxi10iusx617dhhv300meoup' />
      </datasources>
      <datasource-dependencies datasource='federated.0ib5dxi10iusx617dhhv300meoup'>
        <column caption='Region' datatype='string' name='[District (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[District]' new-bin='true'>
            <bin default-name='false' value='&quot;Central&quot;'>
              <value>&quot;Bukit Merah&quot;</value>
              <value>&quot;Central&quot;</value>
              <value>&quot;Geylang&quot;</value>
              <value>&quot;Kallang/Whampoa&quot;</value>
              <value>&quot;Queenstown&quot;</value>
              <value>&quot;Toa Payoh&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;East&quot;'>
              <value>&quot;Bedok&quot;</value>
              <value>&quot;Pasir Ris&quot;</value>
              <value>&quot;Tampines&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;North&quot;'>
              <value>&quot;Ang Mo Kio&quot;</value>
              <value>&quot;Bishan&quot;</value>
              <value>&quot;Hougang&quot;</value>
              <value>&quot;Punggol&quot;</value>
              <value>&quot;Sembawang&quot;</value>
              <value>&quot;Sengkang&quot;</value>
              <value>&quot;Serangoon&quot;</value>
              <value>&quot;Woodlands&quot;</value>
              <value>&quot;Yishun&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;West&quot;'>
              <value>&quot;Bukit Batok&quot;</value>
              <value>&quot;Bukit Panjang&quot;</value>
              <value>&quot;Choa Chu Kang&quot;</value>
              <value>&quot;Clementi&quot;</value>
              <value>&quot;Jurong East&quot;</value>
              <value>&quot;Jurong West&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[District]' role='dimension' type='nominal' />
        <column datatype='integer' name='[Pricing]' role='measure' type='quantitative' />
        <column datatype='integer' name='[Q42014]' role='measure' type='quantitative' />
        <column datatype='integer' name='[Q42015]' role='measure' type='quantitative' />
        <column datatype='integer' name='[Q42016]' role='measure' type='quantitative' />
        <column datatype='integer' name='[Town]' role='measure' type='quantitative' />
        <column-instance column='[Pricing]' derivation='Max' name='[max:Pricing:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Q42014]' derivation='None' name='[none:Q42014:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Q42015]' derivation='None' name='[none:Q42015:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Q42016]' derivation='None' name='[none:Q42016:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Town]' derivation='None' name='[none:Town:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0ib5dxi10iusx617dhhv300meoup].[District (group)]'>
        <groupfilter function='level-members' level='[District (group)]' />
      </filter>
      <filter class='quantitative' column='[federated.0ib5dxi10iusx617dhhv300meoup].[max:Pricing:qk]' included-values='in-range-or-null'>
        <min>357000</min>
        <max>667500</max>
      </filter>
      <filter class='quantitative' column='[federated.0ib5dxi10iusx617dhhv300meoup].[none:Q42014:qk]' included-values='in-range'>
        <min>350000</min>
        <max>835000</max>
      </filter>
      <filter class='quantitative' column='[federated.0ib5dxi10iusx617dhhv300meoup].[none:Q42015:qk]' included-values='in-range'>
        <min>345000</min>
        <max>845000</max>
      </filter>
      <filter class='quantitative' column='[federated.0ib5dxi10iusx617dhhv300meoup].[none:Q42016:qk]' included-values='in-range'>
        <min>343000</min>
        <max>811500</max>
      </filter>
      <filter class='quantitative' column='[federated.0ib5dxi10iusx617dhhv300meoup].[none:Town:qk]' included-values='all' />
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Ashley-Resale' />
      <command command='tsc:brush'>
        <param name='field-captions' value='District' />
        <param name='target' value='Ashley-Resale' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Andrew-Road Accidents' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Andrew-Road Accidents' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Renfred-Dashboard 1' type='sheet' worksheet='Renfred-Bill Size' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Renfred-Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Renfred-Dashboard 1' type='sheet' worksheet='Renfred-Length of Stay' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Renfred-Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Andrew-FatalAcc'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Fatal Road Accidents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Road Accidents' name='federated.0liet9u176i8zf1g4x4db0wai1ns' />
          </datasources>
          <datasource-dependencies datasource='federated.0liet9u176i8zf1g4x4db0wai1ns'>
            <column datatype='integer' name='[Buses Fatalities]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cyclists &amp; Pillions Fatalities]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Goods Vans &amp; Pick-ups Fatalities]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Lorries, Tipper Trucks &amp; Trailers Fatalities]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Motor Cyclists &amp; Pillion Riders Fatalities]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Motor Vehicle Drivers &amp; Passengers Cars &amp; Station Wagons Fatalit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Others Fatalities]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Pedestrians Fatalities]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Buses Fatalities]' derivation='Sum' name='[sum:Buses Fatalities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cyclists &amp; Pillions Fatalities]' derivation='Sum' name='[sum:Cyclists &amp; Pillions Fatalities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Goods Vans &amp; Pick-ups Fatalities]' derivation='Sum' name='[sum:Goods Vans &amp; Pick-ups Fatalities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lorries, Tipper Trucks &amp; Trailers Fatalities]' derivation='Sum' name='[sum:Lorries, Tipper Trucks &amp; Trailers Fatalities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Motor Cyclists &amp; Pillion Riders Fatalities]' derivation='Sum' name='[sum:Motor Cyclists &amp; Pillion Riders Fatalities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Motor Vehicle Drivers &amp; Passengers Cars &amp; Station Wagons Fatalit]' derivation='Sum' name='[sum:Motor Vehicle Drivers &amp; Passengers Cars &amp; Station Wagons Fatalit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Others Fatalities]' derivation='Sum' name='[sum:Others Fatalities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pedestrians Fatalities]' derivation='Sum' name='[sum:Pedestrians Fatalities:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0liet9u176i8zf1g4x4db0wai1ns].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Buses Fatalities:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Cyclists &amp; Pillions Fatalities:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Goods Vans &amp; Pick-ups Fatalities:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Lorries, Tipper Trucks &amp; Trailers Fatalities:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Motor Cyclists &amp; Pillion Riders Fatalities:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Motor Vehicle Drivers &amp; Passengers Cars &amp; Station Wagons Fatalit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Others Fatalities:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Pedestrians Fatalities:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0liet9u176i8zf1g4x4db0wai1ns].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0liet9u176i8zf1g4x4db0wai1ns].[none:Year:qk]' field-type='quantitative' max='2018' min='2008' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0liet9u176i8zf1g4x4db0wai1ns].[none:Year:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0liet9u176i8zf1g4x4db0wai1ns].[none:Year:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0liet9u176i8zf1g4x4db0wai1ns].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0liet9u176i8zf1g4x4db0wai1ns].[Multiple Values]</rows>
        <cols>[federated.0liet9u176i8zf1g4x4db0wai1ns].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Andrew-NonFatalAcc'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Non-Fatal Road Accidents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Road Accidents' name='federated.0liet9u176i8zf1g4x4db0wai1ns' />
          </datasources>
          <datasource-dependencies datasource='federated.0liet9u176i8zf1g4x4db0wai1ns'>
            <column datatype='integer' name='[Buses Injured]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cyclists &amp; Pillions Injured]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Goods Vans &amp; Pick-ups Injured]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Lorries, Tipper Trucks &amp; Trailers Injured]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Motor Cyclists &amp; Pillion Riders Injured]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Motor Vehicle Drivers &amp; Passengers Cars &amp; Station Wagons Injured]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Others Injured]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Pedestrians Injured]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Buses Injured]' derivation='Sum' name='[sum:Buses Injured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cyclists &amp; Pillions Injured]' derivation='Sum' name='[sum:Cyclists &amp; Pillions Injured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Goods Vans &amp; Pick-ups Injured]' derivation='Sum' name='[sum:Goods Vans &amp; Pick-ups Injured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lorries, Tipper Trucks &amp; Trailers Injured]' derivation='Sum' name='[sum:Lorries, Tipper Trucks &amp; Trailers Injured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Motor Cyclists &amp; Pillion Riders Injured]' derivation='Sum' name='[sum:Motor Cyclists &amp; Pillion Riders Injured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Motor Vehicle Drivers &amp; Passengers Cars &amp; Station Wagons Injured]' derivation='Sum' name='[sum:Motor Vehicle Drivers &amp; Passengers Cars &amp; Station Wagons Injured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Others Injured]' derivation='Sum' name='[sum:Others Injured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pedestrians Injured]' derivation='Sum' name='[sum:Pedestrians Injured:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0liet9u176i8zf1g4x4db0wai1ns].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Buses Injured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Cyclists &amp; Pillions Injured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Goods Vans &amp; Pick-ups Injured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Lorries, Tipper Trucks &amp; Trailers Injured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Motor Cyclists &amp; Pillion Riders Injured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Motor Vehicle Drivers &amp; Passengers Cars &amp; Station Wagons Injured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Others Injured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Pedestrians Injured:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0liet9u176i8zf1g4x4db0wai1ns].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Buses Injured:qk]&quot;</bucket>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Cyclists &amp; Pillions Injured:qk]&quot;</bucket>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Goods Vans &amp; Pick-ups Injured:qk]&quot;</bucket>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Lorries, Tipper Trucks &amp; Trailers Injured:qk]&quot;</bucket>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Motor Cyclists &amp; Pillion Riders Injured:qk]&quot;</bucket>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Motor Vehicle Drivers &amp; Passengers Cars &amp; Station Wagons Injured:qk]&quot;</bucket>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Others Injured:qk]&quot;</bucket>
              <bucket>&quot;[federated.0liet9u176i8zf1g4x4db0wai1ns].[sum:Pedestrians Injured:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0liet9u176i8zf1g4x4db0wai1ns].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0liet9u176i8zf1g4x4db0wai1ns].[none:Year:qk]' field-type='quantitative' max='2018' min='2008' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0liet9u176i8zf1g4x4db0wai1ns].[none:Year:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0liet9u176i8zf1g4x4db0wai1ns].[none:Year:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0liet9u176i8zf1g4x4db0wai1ns].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0liet9u176i8zf1g4x4db0wai1ns].[Multiple Values]</rows>
        <cols>[federated.0liet9u176i8zf1g4x4db0wai1ns].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Andrew-Speed Cameras'>
      <table>
        <view>
          <datasources>
            <datasource caption='SpeedCameras (ProjectTheFifth)' name='federated.01t06k91ijdnc71554a9b1ffizpc' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01t06k91ijdnc71554a9b1ffizpc'>
            <column caption='Camera Type1' datatype='string' name='[Camera Type]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude1' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column caption='Location1' datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Longitude1' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Camera Type]' derivation='Count' name='[cnt:Camera Type:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Camera Type]' derivation='None' name='[none:Camera Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01t06k91ijdnc71554a9b1ffizpc].[none:Camera Type:nk]'>
            <groupfilter function='level-members' level='[none:Camera Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.01t06k91ijdnc71554a9b1ffizpc].[none:Camera Type:nk]' direction='DESC' using='[federated.01t06k91ijdnc71554a9b1ffizpc].[cnt:Camera Type:qk]' />
          <slices>
            <column>[federated.01t06k91ijdnc71554a9b1ffizpc].[none:Camera Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.01t06k91ijdnc71554a9b1ffizpc].[none:Longitude:qk]' field-type='quantitative' max='11570981.214337094' min='11556836.341102848' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.01t06k91ijdnc71554a9b1ffizpc].[none:Latitude:qk]' field-type='quantitative' max='149954.92684780856' min='144290.54075172814' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.01t06k91ijdnc71554a9b1ffizpc].[none:Location:nk]' />
              <color column='[federated.01t06k91ijdnc71554a9b1ffizpc].[none:Camera Type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01t06k91ijdnc71554a9b1ffizpc].[none:Latitude:qk]</rows>
        <cols>[federated.01t06k91ijdnc71554a9b1ffizpc].[none:Longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Andrew-Traffic entering City'>
      <table>
        <view>
          <datasources>
            <datasource caption='average-daily-traffic-volume-en (ProjectTheFifth)' name='federated.0lldpnq0pi2rm715qv8xw0rxusrz' />
          </datasources>
          <datasource-dependencies datasource='federated.0lldpnq0pi2rm715qv8xw0rxusrz'>
            <column caption='Ave Daily Traffic Volume Entering City' datatype='integer' name='[ave_daily_traffic_volume_entering_city]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ave_daily_traffic_volume_entering_city]' derivation='Sum' name='[sum:ave_daily_traffic_volume_entering_city:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0lldpnq0pi2rm715qv8xw0rxusrz].[sum:ave_daily_traffic_volume_entering_city:qk]' field-type='quantitative' max='319523' min='191254' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0lldpnq0pi2rm715qv8xw0rxusrz].[sum:ave_daily_traffic_volume_entering_city:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0lldpnq0pi2rm715qv8xw0rxusrz].[sum:ave_daily_traffic_volume_entering_city:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.0lldpnq0pi2rm715qv8xw0rxusrz].[none:year:qk]' field-type='quantitative' max='2016' min='2004' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0lldpnq0pi2rm715qv8xw0rxusrz].[none:year:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0lldpnq0pi2rm715qv8xw0rxusrz].[none:year:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0lldpnq0pi2rm715qv8xw0rxusrz].[sum:ave_daily_traffic_volume_entering_city:qk]</rows>
        <cols>[federated.0lldpnq0pi2rm715qv8xw0rxusrz].[none:year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Andrew-Vehicles on Road'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Vehicles on Road</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='annual-motor-vehicle-population (ProjectTheFifth)' name='federated.0zd8x780uveusc0zpvizd1fmmbr4' />
          </datasources>
          <datasource-dependencies datasource='federated.0zd8x780uveusc0zpvizd1fmmbr4'>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Number' datatype='integer' name='[number]' role='dimension' type='ordinal' />
            <column-instance column='[number]' derivation='Sum' name='[sum:number:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0zd8x780uveusc0zpvizd1fmmbr4].[none:category:nk]' direction='DESC' using='[federated.0zd8x780uveusc0zpvizd1fmmbr4].[sum:number:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0zd8x780uveusc0zpvizd1fmmbr4].[none:category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0zd8x780uveusc0zpvizd1fmmbr4].[sum:number:qk]</rows>
        <cols>[federated.0zd8x780uveusc0zpvizd1fmmbr4].[none:year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Ashley-Map of District'>
      <layout-options>
        <title>
          <formatted-text>
            <run>MAP</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Ashley-Amenities+ (Project)' name='federated.0ib5dxi10iusx617dhhv300meoup' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ib5dxi10iusx617dhhv300meoup'>
            <column datatype='string' name='[Amenities]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[District (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[District]' new-bin='true'>
                <bin default-name='false' value='&quot;Central&quot;'>
                  <value>&quot;Bukit Merah&quot;</value>
                  <value>&quot;Central&quot;</value>
                  <value>&quot;Geylang&quot;</value>
                  <value>&quot;Kallang/Whampoa&quot;</value>
                  <value>&quot;Queenstown&quot;</value>
                  <value>&quot;Toa Payoh&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Bedok&quot;</value>
                  <value>&quot;Pasir Ris&quot;</value>
                  <value>&quot;Tampines&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North&quot;'>
                  <value>&quot;Ang Mo Kio&quot;</value>
                  <value>&quot;Bishan&quot;</value>
                  <value>&quot;Hougang&quot;</value>
                  <value>&quot;Punggol&quot;</value>
                  <value>&quot;Sembawang&quot;</value>
                  <value>&quot;Sengkang&quot;</value>
                  <value>&quot;Serangoon&quot;</value>
                  <value>&quot;Woodlands&quot;</value>
                  <value>&quot;Yishun&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Bukit Batok&quot;</value>
                  <value>&quot;Bukit Panjang&quot;</value>
                  <value>&quot;Choa Chu Kang&quot;</value>
                  <value>&quot;Clementi&quot;</value>
                  <value>&quot;Jurong East&quot;</value>
                  <value>&quot;Jurong West&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[District]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Pricing]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Q42014]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Q42015]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Q42016]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Town]' role='measure' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pricing]' derivation='Max' name='[max:Pricing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Amenities]' derivation='None' name='[none:Amenities:nk]' pivot='key' type='nominal' />
            <column-instance column='[Q42014]' derivation='None' name='[none:Q42014:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Q42015]' derivation='None' name='[none:Q42015:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Q42016]' derivation='None' name='[none:Q42016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Town]' derivation='None' name='[none:Town:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Count]' derivation='Sum' name='[sum:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pricing]' derivation='Sum' name='[sum:Pricing:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0ib5dxi10iusx617dhhv300meoup].[max:Pricing:qk]</column>
            <column>[federated.0ib5dxi10iusx617dhhv300meoup].[none:Town:qk]</column>
            <column>[federated.0ib5dxi10iusx617dhhv300meoup].[none:Q42016:qk]</column>
            <column>[federated.0ib5dxi10iusx617dhhv300meoup].[none:Q42015:qk]</column>
            <column>[federated.0ib5dxi10iusx617dhhv300meoup].[none:Q42014:qk]</column>
            <column>[federated.0ib5dxi10iusx617dhhv300meoup].[District (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ib5dxi10iusx617dhhv300meoup].[avg:Longitude:qk]' field-type='quantitative' max='11597396.048507953' min='11550845.851615464' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ib5dxi10iusx617dhhv300meoup].[avg:Latitude:qk]' field-type='quantitative' max='164179.31088685646' min='132910.42000872895' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Pricing:qk]' />
              <lod column='[federated.0ib5dxi10iusx617dhhv300meoup].[none:Amenities:nk]' />
              <lod column='[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Pricing:qk]' />
              <lod column='[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Count:qk]' />
              <geometry column='[federated.0ib5dxi10iusx617dhhv300meoup].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ib5dxi10iusx617dhhv300meoup].[avg:Latitude:qk]</rows>
        <cols>[federated.0ib5dxi10iusx617dhhv300meoup].[avg:Longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Ashley-Resale'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Property Price Index&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Ashley-Amenities+ (Project)' name='federated.0ib5dxi10iusx617dhhv300meoup' />
          </datasources>
          <datasource-dependencies datasource='federated.0ib5dxi10iusx617dhhv300meoup'>
            <column caption='Region' datatype='string' name='[District (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[District]' new-bin='true'>
                <bin default-name='false' value='&quot;Central&quot;'>
                  <value>&quot;Bukit Merah&quot;</value>
                  <value>&quot;Central&quot;</value>
                  <value>&quot;Geylang&quot;</value>
                  <value>&quot;Kallang/Whampoa&quot;</value>
                  <value>&quot;Queenstown&quot;</value>
                  <value>&quot;Toa Payoh&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Bedok&quot;</value>
                  <value>&quot;Pasir Ris&quot;</value>
                  <value>&quot;Tampines&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North&quot;'>
                  <value>&quot;Ang Mo Kio&quot;</value>
                  <value>&quot;Bishan&quot;</value>
                  <value>&quot;Hougang&quot;</value>
                  <value>&quot;Punggol&quot;</value>
                  <value>&quot;Sembawang&quot;</value>
                  <value>&quot;Sengkang&quot;</value>
                  <value>&quot;Serangoon&quot;</value>
                  <value>&quot;Woodlands&quot;</value>
                  <value>&quot;Yishun&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Bukit Batok&quot;</value>
                  <value>&quot;Bukit Panjang&quot;</value>
                  <value>&quot;Choa Chu Kang&quot;</value>
                  <value>&quot;Clementi&quot;</value>
                  <value>&quot;Jurong East&quot;</value>
                  <value>&quot;Jurong West&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[District]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Pricing]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Q42014]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Q42015]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Q42016]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Town]' role='measure' type='quantitative' />
            <column-instance column='[Pricing]' derivation='Max' name='[max:Pricing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[District]' derivation='None' name='[none:District:nk]' pivot='key' type='nominal' />
            <column-instance column='[Q42014]' derivation='None' name='[none:Q42014:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Q42015]' derivation='None' name='[none:Q42015:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Q42016]' derivation='None' name='[none:Q42016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Town]' derivation='None' name='[none:Town:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Q42014]' derivation='Sum' name='[sum:Q42014:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Q42015]' derivation='Sum' name='[sum:Q42015:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Q42016]' derivation='Sum' name='[sum:Q42016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Town]' derivation='Sum' name='[sum:Town:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ib5dxi10iusx617dhhv300meoup].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Town:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Q42014:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Q42015:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Q42016:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0ib5dxi10iusx617dhhv300meoup].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Town:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Q42014:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Q42015:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Q42016:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0ib5dxi10iusx617dhhv300meoup].[none:District:nk]'>
            <groupfilter function='level-members' level='[none:District:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ib5dxi10iusx617dhhv300meoup].[none:Q42014:qk]</column>
            <column>[federated.0ib5dxi10iusx617dhhv300meoup].[none:Q42015:qk]</column>
            <column>[federated.0ib5dxi10iusx617dhhv300meoup].[none:Q42016:qk]</column>
            <column>[federated.0ib5dxi10iusx617dhhv300meoup].[none:Town:qk]</column>
            <column>[federated.0ib5dxi10iusx617dhhv300meoup].[max:Pricing:qk]</column>
            <column>[federated.0ib5dxi10iusx617dhhv300meoup].[:Measure Names]</column>
            <column>[federated.0ib5dxi10iusx617dhhv300meoup].[none:District:nk]</column>
            <column>[federated.0ib5dxi10iusx617dhhv300meoup].[District (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0ib5dxi10iusx617dhhv300meoup].[:Measure Names]' value='39' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0ib5dxi10iusx617dhhv300meoup].[none:District:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Town:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0ib5dxi10iusx617dhhv300meoup].[none:District:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Q42014:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0ib5dxi10iusx617dhhv300meoup].[none:District:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Q42015:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0ib5dxi10iusx617dhhv300meoup].[none:District:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='10' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Q42016:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0ib5dxi10iusx617dhhv300meoup].[none:District:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ib5dxi10iusx617dhhv300meoup].[sum:Town:qk] + ([federated.0ib5dxi10iusx617dhhv300meoup].[sum:Q42014:qk] + ([federated.0ib5dxi10iusx617dhhv300meoup].[sum:Q42015:qk] + [federated.0ib5dxi10iusx617dhhv300meoup].[sum:Q42016:qk])))</rows>
        <cols>([federated.0ib5dxi10iusx617dhhv300meoup].[District (group)] / [federated.0ib5dxi10iusx617dhhv300meoup].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Ashley-Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>District PC % Change&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Ashley-Property district postal (Project)' name='federated.0tfqfj61y7l42d143oyle1sk8eza' />
          </datasources>
          <datasource-dependencies datasource='federated.0tfqfj61y7l42d143oyle1sk8eza'>
            <column caption='2014 Ytd' datatype='integer' name='[2014 YTD]' role='measure' type='quantitative' />
            <column caption='2015 Ytd' datatype='integer' name='[2015 YTD]' role='measure' type='quantitative'>
              <aliases>
                <alias key='%null%' value='3000' />
              </aliases>
            </column>
            <column caption='2016 Ytd' datatype='integer' name='[2016 YTD]' role='measure' type='quantitative' />
            <column caption='2017 Ytd' datatype='integer' name='[2017 YTD]' role='measure' type='quantitative' />
            <column datatype='string' name='[Postal District (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Postal District]' new-bin='true'>
                <bin default-name='false' value='&quot;Central&quot;'>
                  <value>&quot;1&quot;</value>
                  <value>&quot;10&quot;</value>
                  <value>&quot;11&quot;</value>
                  <value>&quot;12&quot;</value>
                  <value>&quot;13&quot;</value>
                  <value>&quot;14&quot;</value>
                  <value>&quot;15&quot;</value>
                  <value>&quot;2&quot;</value>
                  <value>&quot;21&quot;</value>
                  <value>&quot;3&quot;</value>
                  <value>&quot;4&quot;</value>
                  <value>&quot;5&quot;</value>
                  <value>&quot;8&quot;</value>
                  <value>&quot;9&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;16&quot;</value>
                  <value>&quot;17&quot;</value>
                  <value>&quot;18&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North&quot;'>
                  <value>&quot;25&quot;</value>
                  <value>&quot;26&quot;</value>
                  <value>&quot;27&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North-East&quot;'>
                  <value>&quot;19&quot;</value>
                  <value>&quot;20&quot;</value>
                  <value>&quot;28&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;22&quot;</value>
                  <value>&quot;23&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Postal District]' role='dimension' type='nominal' />
            <column-instance column='[Postal District]' derivation='None' name='[none:Postal District:nk]' pivot='key' type='nominal' />
            <column-instance column='[2014 YTD]' derivation='Sum' name='[sum:2014 YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2015 YTD]' derivation='Sum' name='[sum:2015 YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2016 YTD]' derivation='Sum' name='[sum:2016 YTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2017 YTD]' derivation='Sum' name='[sum:2017 YTD:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tfqfj61y7l42d143oyle1sk8eza].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0tfqfj61y7l42d143oyle1sk8eza].[sum:2015 YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0tfqfj61y7l42d143oyle1sk8eza].[sum:2016 YTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0tfqfj61y7l42d143oyle1sk8eza].[sum:2017 YTD:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0tfqfj61y7l42d143oyle1sk8eza].[sum:2014 YTD:qk]' included-values='all' />
          <filter class='quantitative' column='[federated.0tfqfj61y7l42d143oyle1sk8eza].[sum:2015 YTD:qk]' included-values='all' />
          <filter class='quantitative' column='[federated.0tfqfj61y7l42d143oyle1sk8eza].[sum:2016 YTD:qk]' included-values='all' />
          <filter class='quantitative' column='[federated.0tfqfj61y7l42d143oyle1sk8eza].[sum:2017 YTD:qk]' included-values='all' />
          <slices>
            <column>[federated.0tfqfj61y7l42d143oyle1sk8eza].[:Measure Names]</column>
            <column>[federated.0tfqfj61y7l42d143oyle1sk8eza].[sum:2015 YTD:qk]</column>
            <column>[federated.0tfqfj61y7l42d143oyle1sk8eza].[sum:2016 YTD:qk]</column>
            <column>[federated.0tfqfj61y7l42d143oyle1sk8eza].[sum:2017 YTD:qk]</column>
            <column>[federated.0tfqfj61y7l42d143oyle1sk8eza].[sum:2014 YTD:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0tfqfj61y7l42d143oyle1sk8eza].[Multiple Values]' field-type='quantitative' fold='true' scope='cols' type='space' />
            <format attr='display' class='0' field='[federated.0tfqfj61y7l42d143oyle1sk8eza].[Multiple Values]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0tfqfj61y7l42d143oyle1sk8eza].[sum:2014 YTD:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0tfqfj61y7l42d143oyle1sk8eza].[none:Postal District:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0tfqfj61y7l42d143oyle1sk8eza].[sum:2014 YTD:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0tfqfj61y7l42d143oyle1sk8eza].[none:Postal District:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0tfqfj61y7l42d143oyle1sk8eza].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0tfqfj61y7l42d143oyle1sk8eza].[none:Postal District:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0tfqfj61y7l42d143oyle1sk8eza].[Postal District (group)] / [federated.0tfqfj61y7l42d143oyle1sk8eza].[none:Postal District:nk])</rows>
        <cols>([federated.0tfqfj61y7l42d143oyle1sk8eza].[sum:2014 YTD:qk] + [federated.0tfqfj61y7l42d143oyle1sk8eza].[Multiple Values])</cols>
      </table>
    </worksheet>
    <worksheet name='Ashley-Sheet 1 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Private PPI</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Ashley-Private property price (Project)' name='federated.1lqojyt193u9401gt8rog1y21re2' />
          </datasources>
          <datasource-dependencies datasource='federated.1lqojyt193u9401gt8rog1y21re2'>
            <column datatype='real' name='[Landed]' role='measure' type='quantitative' />
            <column datatype='real' name='[Non-Landed]' role='measure' type='quantitative' />
            <column datatype='real' name='[Residential Properties]' role='measure' type='quantitative' />
            <column datatype='string' name='[Years]' role='dimension' type='nominal' />
            <column-instance column='[Landed]' derivation='None' name='[none:Landed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Non-Landed]' derivation='None' name='[none:Non-Landed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Residential Properties]' derivation='None' name='[none:Residential Properties:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Years]' derivation='None' name='[none:Years:nk]' pivot='key' type='nominal' />
            <column-instance column='[Landed]' derivation='Sum' name='[sum:Landed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Non-Landed]' derivation='Sum' name='[sum:Non-Landed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Residential Properties]' derivation='Sum' name='[sum:Residential Properties:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1lqojyt193u9401gt8rog1y21re2].[none:Landed:qk]' included-values='in-range'>
            <min>7.4000000000000004</min>
            <max>178.90000000000001</max>
          </filter>
          <filter class='quantitative' column='[federated.1lqojyt193u9401gt8rog1y21re2].[none:Non-Landed:qk]' included-values='in-range'>
            <min>10.5</min>
            <max>148.90000000000001</max>
          </filter>
          <filter class='quantitative' column='[federated.1lqojyt193u9401gt8rog1y21re2].[none:Residential Properties:qk]' included-values='in-range'>
            <min>8.9000000000000004</min>
            <max>154.59999999999999</max>
          </filter>
          <filter class='categorical' column='[federated.1lqojyt193u9401gt8rog1y21re2].[none:Years:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Years:nk]' member='&quot;2014 1Q&quot;' />
              <groupfilter function='member' level='[none:Years:nk]' member='&quot;2014 2Q&quot;' />
              <groupfilter function='member' level='[none:Years:nk]' member='&quot;2014 3Q&quot;' />
              <groupfilter function='member' level='[none:Years:nk]' member='&quot;2014 4Q&quot;' />
              <groupfilter function='member' level='[none:Years:nk]' member='&quot;2015 1Q&quot;' />
              <groupfilter function='member' level='[none:Years:nk]' member='&quot;2015 2Q&quot;' />
              <groupfilter function='member' level='[none:Years:nk]' member='&quot;2015 3Q&quot;' />
              <groupfilter function='member' level='[none:Years:nk]' member='&quot;2015 4Q&quot;' />
              <groupfilter function='member' level='[none:Years:nk]' member='&quot;2016 1Q&quot;' />
              <groupfilter function='member' level='[none:Years:nk]' member='&quot;2016 2Q&quot;' />
              <groupfilter function='member' level='[none:Years:nk]' member='&quot;2016 3Q&quot;' />
              <groupfilter function='member' level='[none:Years:nk]' member='&quot;2016 4Q&quot;' />
              <groupfilter function='member' level='[none:Years:nk]' member='&quot;2017 1Q&quot;' />
              <groupfilter function='member' level='[none:Years:nk]' member='&quot;2017 2Q&quot;' />
              <groupfilter function='member' level='[none:Years:nk]' member='&quot;2017 3Q&quot;' />
            </groupfilter>
          </filter>
          <sort class='natural' column='[federated.1lqojyt193u9401gt8rog1y21re2].[none:Years:nk]' direction='ASC' />
          <slices>
            <column>[federated.1lqojyt193u9401gt8rog1y21re2].[none:Landed:qk]</column>
            <column>[federated.1lqojyt193u9401gt8rog1y21re2].[none:Non-Landed:qk]</column>
            <column>[federated.1lqojyt193u9401gt8rog1y21re2].[none:Residential Properties:qk]</column>
            <column>[federated.1lqojyt193u9401gt8rog1y21re2].[none:Years:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1lqojyt193u9401gt8rog1y21re2].[none:Years:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1lqojyt193u9401gt8rog1y21re2].[sum:Landed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1lqojyt193u9401gt8rog1y21re2].[none:Years:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1lqojyt193u9401gt8rog1y21re2].[sum:Non-Landed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1lqojyt193u9401gt8rog1y21re2].[none:Years:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1lqojyt193u9401gt8rog1y21re2].[sum:Residential Properties:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1lqojyt193u9401gt8rog1y21re2].[none:Years:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1lqojyt193u9401gt8rog1y21re2].[sum:Landed:qk] + ([federated.1lqojyt193u9401gt8rog1y21re2].[sum:Non-Landed:qk] + [federated.1lqojyt193u9401gt8rog1y21re2].[sum:Residential Properties:qk]))</rows>
        <cols>[federated.1lqojyt193u9401gt8rog1y21re2].[none:Years:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Renfred-Bill Size'>
      <table>
        <view>
          <datasources>
            <datasource caption='Project' name='federated.08jnx0w0zktuzw13mo0io1tcu94m' />
          </datasources>
          <datasource-dependencies datasource='federated.08jnx0w0zktuzw13mo0io1tcu94m'>
            <column datatype='integer' name='[Average Bill Size ($)]' role='measure' type='quantitative' />
            <column caption='Cause of Hospitalisation1' datatype='string' name='[Cause of Hospitalisation]' role='dimension' type='nominal' />
            <column caption='Hospital1' datatype='string' name='[Hospital]' role='dimension' type='nominal' />
            <column caption='Ward Type1' datatype='string' name='[Ward Type]' role='dimension' type='nominal' />
            <column-instance column='[Cause of Hospitalisation]' derivation='None' name='[none:Cause of Hospitalisation:nk]' pivot='key' type='nominal' />
            <column-instance column='[Hospital]' derivation='None' name='[none:Hospital:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ward Type]' derivation='None' name='[none:Ward Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Average Bill Size ($)]' derivation='Sum' name='[sum:Average Bill Size ($):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08jnx0w0zktuzw13mo0io1tcu94m].[Action (Cause of Hospitalisation,Hospital,Ward Type)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Cause of Hospitalisation]' />
              <groupfilter function='level-members' level='[Hospital]' />
              <groupfilter function='level-members' level='[Ward Type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.08jnx0w0zktuzw13mo0io1tcu94m].[none:Hospital:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Hospital:nk]' member='&quot;Changi General Hospital&quot;' />
              <groupfilter function='member' level='[none:Hospital:nk]' member='&quot;Ng Teng Fong General Hospital&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.08jnx0w0zktuzw13mo0io1tcu94m].[none:Ward Type:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Ward Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08jnx0w0zktuzw13mo0io1tcu94m].[none:Ward Type:nk]</column>
            <column>[federated.08jnx0w0zktuzw13mo0io1tcu94m].[none:Hospital:nk]</column>
            <column>[federated.08jnx0w0zktuzw13mo0io1tcu94m].[Action (Cause of Hospitalisation,Hospital,Ward Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.08jnx0w0zktuzw13mo0io1tcu94m].[none:Cause of Hospitalisation:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.08jnx0w0zktuzw13mo0io1tcu94m].[none:Cause of Hospitalisation:nk] / ([federated.08jnx0w0zktuzw13mo0io1tcu94m].[none:Ward Type:nk] / [federated.08jnx0w0zktuzw13mo0io1tcu94m].[none:Hospital:nk]))</rows>
        <cols>[federated.08jnx0w0zktuzw13mo0io1tcu94m].[sum:Average Bill Size ($):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Renfred-Length of Stay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Project' name='federated.08jnx0w0zktuzw13mo0io1tcu94m' />
          </datasources>
          <datasource-dependencies datasource='federated.08jnx0w0zktuzw13mo0io1tcu94m'>
            <column aggregation='Count' datatype='real' datatype-customized='true' name='[Average :ength Of Stay]' role='measure' type='quantitative' />
            <column caption='Cause of Hospitalisation1' datatype='string' name='[Cause of Hospitalisation]' role='dimension' type='nominal' />
            <column caption='Hospital1' datatype='string' name='[Hospital]' role='dimension' type='nominal' />
            <column caption='Ward Type1' datatype='string' name='[Ward Type]' role='dimension' type='nominal' />
            <column-instance column='[Cause of Hospitalisation]' derivation='None' name='[none:Cause of Hospitalisation:nk]' pivot='key' type='nominal' />
            <column-instance column='[Hospital]' derivation='None' name='[none:Hospital:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ward Type]' derivation='None' name='[none:Ward Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Average :ength Of Stay]' derivation='Sum' name='[sum:Average :ength Of Stay:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08jnx0w0zktuzw13mo0io1tcu94m].[Action (Cause of Hospitalisation,Hospital,Ward Type)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Cause of Hospitalisation]' />
              <groupfilter function='level-members' level='[Hospital]' />
              <groupfilter function='level-members' level='[Ward Type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.08jnx0w0zktuzw13mo0io1tcu94m].[none:Hospital:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Hospital:nk]' member='&quot;Changi General Hospital&quot;' />
              <groupfilter function='member' level='[none:Hospital:nk]' member='&quot;Ng Teng Fong General Hospital&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.08jnx0w0zktuzw13mo0io1tcu94m].[none:Ward Type:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Ward Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08jnx0w0zktuzw13mo0io1tcu94m].[none:Ward Type:nk]</column>
            <column>[federated.08jnx0w0zktuzw13mo0io1tcu94m].[none:Hospital:nk]</column>
            <column>[federated.08jnx0w0zktuzw13mo0io1tcu94m].[Action (Cause of Hospitalisation,Hospital,Ward Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.08jnx0w0zktuzw13mo0io1tcu94m].[none:Cause of Hospitalisation:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.08jnx0w0zktuzw13mo0io1tcu94m].[none:Cause of Hospitalisation:nk] / ([federated.08jnx0w0zktuzw13mo0io1tcu94m].[none:Ward Type:nk] / [federated.08jnx0w0zktuzw13mo0io1tcu94m].[none:Hospital:nk]))</rows>
        <cols>[federated.08jnx0w0zktuzw13mo0io1tcu94m].[sum:Average :ength Of Stay:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Andrew-Road Accidents'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='17' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='15' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='13' type='layout-basic' w='98400' x='800' y='1000'>
                <zone h='39625' id='8' param='horz' type='layout-flow' w='98400' x='800' y='10375'>
                  <zone h='39625' id='4' param='vert' type='layout-flow' w='49550' x='800' y='10375'>
                    <zone h='39625' id='6' name='Andrew-FatalAcc' w='49550' x='800' y='10375'>
                      <layout-cache minheight='198' minwidth='159' type-h='scalable' type-w='scalable' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='39625' id='10' name='Andrew-NonFatalAcc' w='48850' x='50350' y='10375'>
                    <layout-cache minwidth='152' type-h='fixed' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='9375' id='9' name='Andrew-FatalAcc' pane-specification-id='0' param='[federated.0liet9u176i8zf1g4x4db0wai1ns].[:Measure Names]' type='color' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49000' id='12' name='Andrew-Vehicles on Road' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49000' id='18' name='Andrew-Traffic entering City' w='49200' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Andrew-Road Condition'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='SpeedCameras (ProjectTheFifth)' name='federated.01t06k91ijdnc71554a9b1ffizpc' />
      </datasources>
      <datasource-dependencies datasource='federated.01t06k91ijdnc71554a9b1ffizpc'>
        <column caption='Camera Type1' datatype='string' name='[Camera Type]' role='dimension' type='nominal' />
        <column-instance column='[Camera Type]' derivation='None' name='[none:Camera Type:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='16' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='12' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='3' type='layout-basic' w='98400' x='800' y='1000'>
                  <zone forceUpdate='' h='47500' id='9' param='https://www.google.com.sg/maps/place/Ang+Mo+Kio/@1.3312235,103.7409823,11.46z/data=!4m5!3m4!1s0x31da16c40ac82661:0x500f7acaedaa550!8m2!3d1.3691149!4d103.8454342!5m1!1e1' type='web' w='98400' x='800' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='50500' id='10' name='Andrew-Speed Cameras' w='88800' x='800' y='48500'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='33375' id='13' name='Andrew-Speed Cameras' pane-specification-id='0' param='[federated.01t06k91ijdnc71554a9b1ffizpc].[none:Camera Type:nk]' type='color' w='9600' x='89600' y='65625'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='17125' id='17' name='Andrew-Speed Cameras' param='[federated.01t06k91ijdnc71554a9b1ffizpc].[none:Camera Type:nk]' type='filter' w='9600' x='89600' y='48500'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Ashley-Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='1' name='Ashley-Sheet 1' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='margin-top' value='0' />
              <format attr='margin-right' value='0' />
              <format attr='margin-bottom' value='0' />
              <format attr='margin-left' value='0' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
            <format attr='margin-top' value='8' />
            <format attr='margin-right' value='8' />
            <format attr='margin-bottom' value='8' />
            <format attr='margin-left' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Ashley-Dashboard 1 (2)'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Ashley-Private property price (Project)' name='federated.1lqojyt193u9401gt8rog1y21re2' />
      </datasources>
      <datasource-dependencies datasource='federated.1lqojyt193u9401gt8rog1y21re2'>
        <column datatype='real' name='[Landed]' role='measure' type='quantitative' />
        <column datatype='real' name='[Non-Landed]' role='measure' type='quantitative' />
        <column datatype='real' name='[Residential Properties]' role='measure' type='quantitative' />
        <column-instance column='[Landed]' derivation='None' name='[none:Landed:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Non-Landed]' derivation='None' name='[none:Non-Landed:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Residential Properties]' derivation='None' name='[none:Residential Properties:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='1' name='Ashley-Sheet 1 (2)' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='margin-top' value='0' />
                  <format attr='margin-bottom' value='0' />
                  <format attr='margin-left' value='0' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8125' id='6' name='Ashley-Sheet 1 (2)' param='[federated.1lqojyt193u9401gt8rog1y21re2].[none:Residential Properties:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='margin-top' value='0' />
                  <format attr='margin-right' value='0' />
                </zone-style>
              </zone>
              <zone h='8625' id='7' name='Ashley-Sheet 1 (2)' param='[federated.1lqojyt193u9401gt8rog1y21re2].[none:Non-Landed:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='16000' x='83200' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='margin-right' value='0' />
                </zone-style>
              </zone>
              <zone h='8625' id='8' name='Ashley-Sheet 1 (2)' param='[federated.1lqojyt193u9401gt8rog1y21re2].[none:Landed:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='16000' x='83200' y='17750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='margin-right' value='0' />
                </zone-style>
              </zone>
              <zone h='2750' id='9' name='Ashley-Sheet 1 (2)' pane-specification-id='0' param='[federated.1lqojyt193u9401gt8rog1y21re2].[:Measure Names]' type='color' w='16000' x='83200' y='26375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='margin-right' value='0' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
            <format attr='margin-top' value='8' />
            <format attr='margin-right' value='8' />
            <format attr='margin-bottom' value='8' />
            <format attr='margin-left' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Renfred-Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Project' name='federated.08jnx0w0zktuzw13mo0io1tcu94m' />
      </datasources>
      <datasource-dependencies datasource='federated.08jnx0w0zktuzw13mo0io1tcu94m'>
        <column caption='Hospital1' datatype='string' name='[Hospital]' role='dimension' type='nominal' />
        <column caption='Ward Type1' datatype='string' name='[Ward Type]' role='dimension' type='nominal' />
        <column-instance column='[Hospital]' derivation='None' name='[none:Hospital:nk]' pivot='key' type='nominal' />
        <column-instance column='[Ward Type]' derivation='None' name='[none:Ward Type:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='6' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='4' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='1' name='Renfred-Bill Size' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='margin-top' value='0' />
                  <format attr='margin-left' value='0' />
                </zone-style>
              </zone>
              <zone h='49000' id='3' name='Renfred-Length of Stay' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='margin-bottom' value='0' />
                  <format attr='margin-left' value='0' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='5' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='13000' id='7' name='Renfred-Bill Size' param='[federated.08jnx0w0zktuzw13mo0io1tcu94m].[none:Ward Type:nk]' type='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='margin-top' value='0' />
                  <format attr='margin-right' value='0' />
                </zone-style>
              </zone>
              <zone h='23000' id='8' name='Renfred-Bill Size' param='[federated.08jnx0w0zktuzw13mo0io1tcu94m].[none:Hospital:nk]' type='filter' w='16000' x='83200' y='14000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='margin-right' value='0' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
            <format attr='margin-top' value='8' />
            <format attr='margin-right' value='8' />
            <format attr='margin-bottom' value='8' />
            <format attr='margin-left' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='177'>
    <window class='worksheet' name='Ashley-Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='132'>
            <card param='[federated.0tfqfj61y7l42d143oyle1sk8eza].[sum:2014 YTD:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0tfqfj61y7l42d143oyle1sk8eza].[sum:2017 YTD:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0tfqfj61y7l42d143oyle1sk8eza].[sum:2016 YTD:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0tfqfj61y7l42d143oyle1sk8eza].[sum:2015 YTD:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.0tfqfj61y7l42d143oyle1sk8eza].[none:Postal District:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tfqfj61y7l42d143oyle1sk8eza].[none:2014 YTD:ok]</field>
            <field>[federated.0tfqfj61y7l42d143oyle1sk8eza].[none:2015 YTD:ok]</field>
            <field>[federated.0tfqfj61y7l42d143oyle1sk8eza].[none:2016 YTD:ok]</field>
            <field>[federated.0tfqfj61y7l42d143oyle1sk8eza].[none:Postal District:nk]</field>
            <field>[federated.0tfqfj61y7l42d143oyle1sk8eza].[sum:2014 YTD:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Ashley-Sheet 1 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1lqojyt193u9401gt8rog1y21re2].[none:Years:nk]' type='filter' />
            <card param='[federated.1lqojyt193u9401gt8rog1y21re2].[none:Residential Properties:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1lqojyt193u9401gt8rog1y21re2].[none:Non-Landed:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1lqojyt193u9401gt8rog1y21re2].[none:Landed:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1lqojyt193u9401gt8rog1y21re2].[none:Years:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lqojyt193u9401gt8rog1y21re2].[:Measure Names]</field>
            <field>[federated.1lqojyt193u9401gt8rog1y21re2].[none:Years:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Ashley-Dashboard 1 (2)'>
      <viewpoints>
        <viewpoint name='Ashley-Sheet 1 (2)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='Ashley-Dashboard 1'>
      <viewpoints>
        <viewpoint name='Ashley-Sheet 1' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Ashley-Resale'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='31' type='pages' />
            <card size='115' type='filters' />
            <card size='355' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ib5dxi10iusx617dhhv300meoup].[District (group)]' size='62' type='filter' />
            <card param='[federated.0ib5dxi10iusx617dhhv300meoup].[none:Town:qk]' show-domain='false' show-null-ctrls='false' size='44' type='filter' />
            <card param='[federated.0ib5dxi10iusx617dhhv300meoup].[none:Q42016:qk]' show-domain='false' show-null-ctrls='false' size='44' type='filter' />
            <card param='[federated.0ib5dxi10iusx617dhhv300meoup].[none:Q42015:qk]' show-domain='false' show-null-ctrls='false' size='44' type='filter' />
            <card param='[federated.0ib5dxi10iusx617dhhv300meoup].[none:Q42014:qk]' show-domain='false' show-null-ctrls='false' size='44' type='filter' />
            <card pane-specification-id='7' param='[federated.0ib5dxi10iusx617dhhv300meoup].[none:District:nk]' size='20' type='color' />
            <card param='[federated.0ib5dxi10iusx617dhhv300meoup].[District (group)]' size='27' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ib5dxi10iusx617dhhv300meoup].[District (group)]</field>
            <field>[federated.0ib5dxi10iusx617dhhv300meoup].[none:District (Sheet11):nk]</field>
            <field>[federated.0ib5dxi10iusx617dhhv300meoup].[none:Q42014:qk]</field>
            <field>[federated.0ib5dxi10iusx617dhhv300meoup].[none:Q42015:qk]</field>
            <field>[federated.0ib5dxi10iusx617dhhv300meoup].[none:Q42016:qk]</field>
            <field>[federated.0ib5dxi10iusx617dhhv300meoup].[none:Town:qk]</field>
            <field>[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Q42015:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Andrew-Road Condition'>
      <viewpoints>
        <viewpoint name='Andrew-Speed Cameras'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.01t06k91ijdnc71554a9b1ffizpc].[none:Camera Type:nk]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
    </window>
    <window class='worksheet' name='Ashley-Map of District'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ib5dxi10iusx617dhhv300meoup].[max:Pricing:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0ib5dxi10iusx617dhhv300meoup].[sum:Pricing:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ib5dxi10iusx617dhhv300meoup].[none:District:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Andrew-Road Accidents'>
      <viewpoints>
        <viewpoint name='Andrew-FatalAcc'>
          <zoom type='entire-view' />
          <highlight field='[federated.0liet9u176i8zf1g4x4db0wai1ns].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Andrew-NonFatalAcc'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Andrew-Traffic entering City'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Andrew-Vehicles on Road'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.0zd8x780uveusc0zpvizd1fmmbr4].[sum:number:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight field='[federated.0zd8x780uveusc0zpvizd1fmmbr4].[none:category:nk]' type='highlight'>
            <bucket-selection />
          </highlight>
          <floating-toolbar-visibility value='1' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='12' />
    </window>
    <window class='worksheet' name='Andrew-FatalAcc'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='113'>
            <card pane-specification-id='0' param='[federated.0liet9u176i8zf1g4x4db0wai1ns].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0liet9u176i8zf1g4x4db0wai1ns].[:Measure Names]</field>
            <field>[federated.0liet9u176i8zf1g4x4db0wai1ns].[none:Total Casualties Fatalities:qk]</field>
            <field>[federated.0liet9u176i8zf1g4x4db0wai1ns].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Andrew-NonFatalAcc'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0liet9u176i8zf1g4x4db0wai1ns].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0liet9u176i8zf1g4x4db0wai1ns].[:Measure Names]</field>
            <field>[federated.0liet9u176i8zf1g4x4db0wai1ns].[none:Total Casualties Fatalities:qk]</field>
            <field>[federated.0liet9u176i8zf1g4x4db0wai1ns].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Andrew-Vehicles on Road'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zd8x780uveusc0zpvizd1fmmbr4].[none:category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zd8x780uveusc0zpvizd1fmmbr4].[none:category:nk]</field>
            <field>[federated.0zd8x780uveusc0zpvizd1fmmbr4].[none:number:ok]</field>
            <field>[federated.0zd8x780uveusc0zpvizd1fmmbr4].[none:type:nk]</field>
            <field>[federated.0zd8x780uveusc0zpvizd1fmmbr4].[none:year:ok]</field>
            <field>[federated.0zd8x780uveusc0zpvizd1fmmbr4].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Andrew-Traffic entering City'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Renfred-Bill Size'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08jnx0w0zktuzw13mo0io1tcu94m].[none:Cause of Hospitalisation:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Renfred-Length of Stay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08jnx0w0zktuzw13mo0io1tcu94m].[none:Cause of Hospitalisation:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08jnx0w0zktuzw13mo0io1tcu94m].[none:Cause of Hospitalisation:nk]</field>
            <field>[federated.08jnx0w0zktuzw13mo0io1tcu94m].[none:Hospital:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Renfred-Dashboard 1'>
      <viewpoints>
        <viewpoint name='Renfred-Bill Size' />
        <viewpoint name='Renfred-Length of Stay' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Andrew-Speed Cameras'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01t06k91ijdnc71554a9b1ffizpc].[none:Camera Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01t06k91ijdnc71554a9b1ffizpc].[none:Camera Type:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Andrew-FatalAcc' width='192'>
      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
      /T82C6OBA2JTdgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Andrew-NonFatalAcc' width='192'>
      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
      DZY2sjhKjDa9lRNvfIvZyWGWk2/RFntSwnEcdN3/lxyaVjndqqr6VlPXKv+PqaiKb3XUKr1/
      NE3zrU6lPqd+11Er9AFVlP2xz3yYgcqxNy4wZNtPbn19uuCmM2dx5TutxD7nSwQVVUX/agoV
      BXn6i/1O3ggTgSYBEIEmARCBJgEQgSYBEIEmARCBJgEQgSYBEIEmARCBJgEQgSYBEIEmARCB
      JgEQgSYBEIEmARCBJgEQgSYBEIFWMQDmxgI/++nPmZoZ53Fmq5ZzEqJmKgZg/LNLzC+uksmu
      MP1ouZZzEqJmKgag77XjYC5z6fIE/X3pWs5JiJqp+KH4fKFAc0cblhuiWCoC1b9qRoh6VDEA
      7YdP8yeHT/Nw+Nes5at38HJdm9zaGkooRqxBR1E0XKuEqzdgaNIbQuxfFQOw9OAWH1+6Q6FY
      5uz7J6puZHb8No9zDqn0ASLqJvFYO5PjIxx54yyG5vuchfCNRwBMrnz0j9ydyQCgqGEMo/r/
      4gvLyyh6Ak03oJjn0vVfcez8d4gZCrZt47oujuNgmtu7BL8oy6rc/tf2saZZpY6fa6vWg9Q0
      Ld/qOE7lo7rlY51K6/F1n1Xp/WlZ1dfiEQCd0xcuMphb5KOP/p2C+/UNrhpCEaLdPcyO3iU9
      mGbwcD/rq8tYySja04ZZruvuUWvEyk8Y1cf2e9VaI6qKfy0Yq7X503UfWxZWraPveR0//zaa
      Vvk0YxetERXCkShj/3qdpRWT09/up1is/McHOP76G9y+NUz38RN0JHT0jihOcZX1gk0y9mUJ
      ZQ9aJVbbpKIovtWsuh3Fv7VV24qf66laqRbr8XUtVep/TZ2K0ejo7+VUJMa1S2N878PqrwHU
      UIzX3/7Wbz8Ybg/Md82K+uURgDKXP/olhcZuzl24yLnzDqFQqPYzE6IGPE7QDM68+x3SoTz/
      96c/4a/+908Ym1ur/cyEqAGPI4DLxtoK2XwBRdNJtjYTDctXiYlXk8cz22Zpfoloqo8fnXuP
      SEgu5ItXl0cADI698XbtZyLESyCfBxCBJgEQgSYBEIEmARCBJgEQgSYBEIEmARCBJgEQgSYB
      EIEmARCBJgEQgSYBEIEmARCBJgEQgSYBEIEmARCBJgEQgebbh30LawtkrBjJmIKuR7C31rCj
      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
    </thumbnail>
    <thumbnail height='192' name='Andrew-Road Accidents' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Andrew-Road Condition' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29eYxs2Xkf9jt3v7X3Vr28ZRZy3uMMyRHJIUMNxRlGIiUHRmxYDGXYBgLZ
      lJQYhIEgyAIYCSAoihEgFmPYlo0gkSE4DhHZpEnayB92aCoQF3OZGZLiLOQMZ3tLv16qurv2
      qrue/HHrO33uqXOr+40kToC6H9Doqrr3nuW7336+8x3GOecooYQVBePtHkAJJbydUDJACSsN
      lvzl3t03YTvO2zWWEkr4qUOOAWzHwVZ77+0aSwkl/NShNIFKWGkoGaCElYaSAUpYaSgZoISV
      hpIBSlhpKBmghJWGkgFKWGkoGaCElYaSAUpYaSgZoISVhpIBSlhpKBmghJWGkgFKWGkoGaCE
      lYaSAUpYaSgZoISVhpIBSlhpKBmghJWGkgFKWGkoGaCElYaSAUpYaSgZoISVhpIBSlhpKBmg
      hJWGkgFKWGkoGaCElYaSAUpYaSgZoISVhpIBSlhpKBmghJWGkgFKWGkoGaCElYaSAUpYaSgZ
      oISVhpIBSlhpKBmghJWGkgFKWGkoGaCElYaSAUpYaSgZoISVhpIBSlhpKBmghJWGkgFKWGko
      GaCElYaSAUpYaSgZoISVhpIBSlhpKBmghJWGkgFKWGkoGaCElYaSAUpYaSgZoISVhpIBSlhp
      KBmghJWGkgFKWGkoGaCElYaSAUpYaSgZoISVhpIBSlhpKBmghJWGkgFKWGkoGaCElYaSAUpY
      aSgZoISVhpIBSlhpKBmghJWGkgFKWGkoGaCElYaSAUpYaSgZoISVhpIBSlhpKBmghJWGkgFK
      WGkoGaCElYaSAUpYaSgZoISVhpIBSlhpKBmghJWGkgFKWGkoGaCElYaSAUpYaSgZoISVhpIB
      SlhpKBmghJWGkgFKWGkoGaCElYaSAUpYaSgZoISVhpIBSlhpKBmghJWGkgFKWGmw5C9RGKJz
      fO/tGksJJfzUgXHO+ds9iBJKeLugNIFKWGkoGaCElYaSAUpYaVhggOe+9e8RpPqbX3z+pftq
      /OD263jm2Wdw+6Bz6Weef+lF8fnNV3+M5559Bv1JdF/9llDCZSEXBUI8xnB4iu8//wbetWXi
      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
    </thumbnail>
    <thumbnail height='192' name='Andrew-Speed Cameras' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Andrew-Traffic entering City' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAfNUlEQVR4nO3deXRb153Y8S/wsIMASIAA91WkNlIUtdmyvK+J48R1nDgzSeakSZrjzJku
      M9PT+atzOpnT09PT/6ZtmibNNMkkk3EmySRjN4732I61S9wXcd/3HQCxvq1/0LIl2RZgigBF
      4n7O4ZEgEPhdUPy9d9+79/6uQdd1HUHIUcbtboAgbCeRAEJOM21XYFVV0TQNANELE7aLYbuv
      AWRZxmQyYTAYMh4rmUxisVgyHme3xtJ1HVmWsxJLVVV0XcdkyuwxWnSBhJwmEkDIaSIBhJwm
      EkDIaSIBhJwmEkDIaSIBhJwmEkDIaSIBhJwmEkDIaSIBhJwmEkDIaSIBhJwmEkDIaSIBhJwm
      EkDIaSIBhJwmEkDIaSIBhJwmEkDIaSIBhJy2BUvudZLxOElVw2Z3IKESjSWw2hxIBp14PIZk
      sWEygq4bMKCiGUyYjJmvAiEIqdx6AuhJBnu6WYvFsOZX4GOJ8ZUYksPPPr9Gz+gSsjGPOw4H
      CIfyCC8OEth3hEKneQuaLwi35tYTwGClqrqM2PAELreNyLKNu+89QXdLC2tBA8fuvY/ZtlYi
      qkx/x2VKGw7hc5jRNO29L0VRtuCjpKZpGrIsi1g7IJau6+99ZdKWVB2yOD2UlRYxGwxh1jV0
      QAMM6OgaKIBklPD68omuR9EBg8GA0WhE0zQkSdqKZqQkYt0aXdezFkvTNHRdz3istBMgnkhg
      tVg+WMEtEablcguRmExB+V587ji/e+UlfBUN+H0y519/GauvkgqjmeKq/WjrI0ytxKj02TEY
      DNd9ZdrVpMuG3RhL1/WsxgIyHivt0oj/+4c/4/NPfgK/r2BLGyBKI+6cWDlbGrHryiAj41N8
      54c/Y35xOaMNEoRsuml6zS8u8b0f/5JgMEQ0luBwwz5Gx6co8vuy1T5ByKibngEChT4O1teS
      SMocO3yQL3/+05w8fjhbbROEjLvpGWBmbgG3K48vfe4J1tejWemnC0I23TQB8j1uHrn/JEaj
      kWSW7jMLQjbdNAGcDvt7f7eYxcitsLvoup7eXaB4ZI2llbDYykjYNeJJhd+cHUhvIEyJhbh8
      poWoZqa2oYlD9ZVI4nJA2KEW1yL86KUOLvfPpJcAuq4Tia0Tli2MdV1Esjo5VCVuhQo7i67r
      XOqb4e9e7sBogL/8yr3pJYBmsHDfJ57C63GgyjJI4npA2FliCZmfv9nLi+cGOHWogm88cRSn
      zZw6AVQ5zmBLG0rFPoIzC8xEi7nvRE022iwIt0zXdYamV/jRS+3Mr0Z49sljPHikGundOUYp
      EyC+vkhbayuxyUVKCvI5+WBzxhstCFtBUTVebxnhude7Kfe7+Kuv3k9FwHPd96RMgGQsSV3z
      Ya4MT7C0kGRpNUyF157qZYKwrVbDMX70cgcXe6d54q56nrp3P3n2D07iS5EAOqou0XTPY9z7
      qMTa/DhqXn6GmiwIt07TdNoGZ/neCy1ous5ffPEUR+qLP3IWQ4pxAJXOs5fQrJaNKcvyKu1d
      ExlotiDcukhc5rk3uvmbX15gf1Uh//XZRzi6t+SmU3hSnAEkKqs9PP+Pv6CqyMP46DD3PfXV
      rW21IGyBkZlV/vbFVsbngnzpkUYeO7EHsyn1arKUC2J0TWV1eZFwNInbW0i+y8FWjoGJBTE7
      J9btuCBG03R+3zHOj1/pwOe288f/4ji1pQVp/z6lvAg2GCUKCgN4tI08ubosThC222o4xvd/
      08rlvhkeOV7LVz/ZjMX88dYQpzUQtjTczj+/1QJynLjJzxf+4GmK3Nk5ugnCjXRdp2d0ke++
      cBlN1/nzL9zFnQfKMG6i1lRaCRCcX+TQ/U9SZ5rgFy90MTGzTJG75GMHE4RbJSsqz73RzauX
      hjlQVciznzmOP9+x6fdLKwFqjhyj81cv0J6wcOKBE5TeMJigaSqqqiGZTBh0HUVVMEpmjAZQ
      FAWjJGG82m3SdXSD4f3HgpAGXddZWIvwN7+4wORCkC882MBjJ/Zgs9zaovm0Xh1eWiCY0DCj
      YfEUU+q9NuOS9Fy6zHI0htNfg1ueZSaYRLd5aSq10NY/hW7zcUeTn3DIRWSpH2/9UQJ5Yj6R
      kB5ZUXmnc4KfvNqJz23nv3zjIaqKt2Y8Kq2yKJMtv2fGs5cjlV4kk+m9eRQbdHQdVuYmWEpI
      SOF5oliJ6ya8RAkcPMJMeyvuPV4GLo5RWLefhtoSdH2j8JGqqlmrn6MoSsbLbIhYW0PTNACi
      CZX/+9t2LvVN88DhSj53/0EKXLYti5PWJ7Hn59H95m/pt9g4dv9jNFQVXvOsgYXxPsKSl7oq
      L4Mdi7i9bqKzS6j2jeTYqBJnwGG3kYgn3n/lu92gbN1VylYBLhFrSyLRN7HID1/qJBKX+fdf
      uIvmuiKkLS6qnDIBYuEV4pZC7j51Eg0jgQLn9d+ghmhpvYLZ7SIUrcOpRRnsX8bo8FFf6OLc
      6y9jKSinTDJTtqcBNTzM5EoRlb6N+URXK41l44eqqmrWyhVmOpau68QSCj1jC3QMzV338zNJ
      EmbTB8+qktGI1fLBNllMEibpg99vs5iuu1bT2Thjm6SNXxtZUZFV7b3nk4qKcu1j+frHscT7
      68p1/UMeJ5XrXntlfJG6Mi9/8cW7KS10ffQP4xak7ALFQiuMj4wwNreMyWShrukY1QH3ljVA
      DIR9PAlZYX4lwiuXhrl0ZZpIXKbE58R0TbLJioasqh94rap+eLFZTdfRtA/+u6rp6Nzw7zpc
      HQk13nAzQzJef3aQjAYM7x6xDRiwW98/3hoMBuyW6x/brnleMhg4tq+EU40VaY3oblbKM4Dd
      7cXnHGPaW8E9zXVZ62sK11sJxzjdOcHFK9OMzKxS6HHwwJFq7m6soCjfjs1mTfkesqLyYYc7
      RdXQPuSJD36/jqwomE0bNzAkyXDd9aBkvOHxDc9/HO+PBN8GxXGNVgujre8w09/B0fseo0Es
      h8yKeFKhd2yR010TtA3OEUvI3HmgnGceOEhdmRfnu9N7k8lkWu/3UUfSdEdPszkVIlvSSwBV
      Zqxnjs//2REWl6IgEiBjVFVjZjnM+d5p3mgZYTUcp8SXxx892sSdB8pw2s1iKsoWSm8cYDlM
      QYGDibEp8jzFmW5TztE0nbX1OJ3D85zpnqR9aI6iAicnD5Zzb1MlVcX5H3qRKty6tBKg/PBx
      HlYMrKk27jhcnuk25QxZURmcWuF010bfPpZQaK4r4k8/dydNe4pwO1P364Vbk1YCTF3pp2Dv
      Eer0RfquTHO0qSLT7drVQpEEL18c4nzPFFNLIUq8Lj51sp57DlXic9uRxNE+a1ImQGhhkJ/9
      /U+JeIvxOZ08/NkvZaNdu4qu64SiCQYml3nl4jDdIws4bGZOHCjj2c8cY/91A4tCNqU1FWJ1
      cpDOsTksJguVexso8+VtWQN28ziAZDIxMLnMhd5pLlyZJhRJUFtawKPHa2muK96yLk4uL4i5
      VWm9++r0BCHVQa3XjfVjLjjIRaqq8XbHBG91TDA4uUyxN4+Hj9Zwx4EySn0uTB8ySitsj7QS
      wGZT6fj9JRZ8Hk44Cil0i7IoH0XXdf75dB//+LseTjaU88wf3cu+Sh92q5j9ejtKkQAai9ML
      +Jvv5+v+o/gLrayFs9OwnepM1yS/eKuXrzx2iE/fvX+7myOkkLIsSvvbF4gQ5uzb3URWJ2jv
      mMxOy3ag8bk1fvDbNh46UsNDR6u3uzlCGlJ2gaLBMZ77wRSjPQssLnsoa/pUNtq14ywHo3z7
      15cIFDj5yicPY0RL/SJh26VIABOPf+1ZksrVmYUGLLatW4ywWyRllR+/0slyMMp//lcPYrOY
      0p6fI2yvFF0gAxabHafDSmgliNGkI6til5hr6brOSxcGuXBlim8+eZwy/9ZNFRcyL637cXO9
      l/jb//5jBuf6Od8qSiNeq2N4np+90cNT9+zn+H5RKWOnSSsBjAYjmh7hzJvnsXi2bhBsp5tZ
      CvPd5y/TVFfE0/cf2PTcd2H7pDUOEDhwnG/+aSEh1Up1pZgKDRCJJ/n+b1qxmk38u6fvwJLh
      hRtCZqSVALM95/jl29047Q4SD3+Kpmp/ptt1W0vKKs+93s3w9Ap//fUH31uYIuw8aSWAWTJT
      VF1Hpc9NoUuMAr/VPsbvWkf51589QXWxJ/ULhNtWWp3WcCiCx+entLQEp+2DQ/qrM8O8/fZp
      FsNJNDlK67l36BmZQ0tGaDn3DmPzIRKJMOFwgvjqHMsR5UOi7AyDUyv84LdtfOpkPScbysXq
      rB0urQSwOw10nD3N66+/yfhC6IZnk4STdk6eaGBseJC+zjaK9h+nrszL+GAv/vpmpvq7iMTX
      WF1apXNoFrdtZ/aXl4JR/sc/XaCxJsDnHzgoLnp3gbS6QJ7KQ3zqER8aRopvrAuEhbISD4ND
      Y1RWlTHeNs1s+1lchdUU6Bb8PheK08G6kuDi6fM0PfQIZsmAqqpomoamaciy/KFxt5qqqpse
      oIolZL73fAtJWeHZTzdjRLvpe91KrI9rN8a6Whnu6p+ZklYCGAwGJElibbKHoDFA4LpqvApD
      AyOU1O3HYzexnF9A/YFmhi5dIOm1EgpGWYjHqTcVcvyuk8xPjyMX52OWJCRJ2hHrATRd59Wz
      Q/RNLPMXXzyFv8CVsr27oQbRja4uHcm59QCx4CLdHR2EwstUFSauf1JNsrayxOSZt/FW7KVh
      by0tl86QX7Gf+iIbLS0X8VYfwmmVkAptBLxGFkMJSgt2xpQKXddpG5jl52/28C8/eZjG2oDo
      9+8iKVaEaUwP9zG1dHUOtJGK+gOUenNnRdjY3Bp/9YO3uO9wJV99vDntfv9uPQPk3Ioww7t1
      8JRElCS2Ld0f7Ha3th7nf/36EmWFLv7w4UZx0bsLpfgfNVK65wAHy51cGRhjtL+b5WhuTPNN
      yio/eLGN5VCUf/P0HThtYrBrN0rrkBYLxZCcbjx5JqKhWKbbtO3iSYUfvtTO2Nwa/+EPTlGy
      hUUAhNtLyiWR06PDaPnVPP3JWlTJjte9+f2YdgJV0/jJq52c6ZrgP37lPvZViLlPu1nqawA1
      QeeF37O6nqAgUELz8ROUbeFF8O1E03Teahvn9csjfPPJY+KXPwekcQ1wkFMnj+J1SQx1dTA5
      v3tXxQ/PrPCTVzt4/M46Hmiu3u7mCFmQ4gyg0vK7FxmJ2jl16pM8+kTedRsx7CbLoSj/81cX
      qSkp4A8fbtzUnrPCzpMiASSOPfwkR3UNXTdgYGPHEMMuuxmalFW+8+vLGA0G/uSp47e89aaw
      c6R1F2iq8zIDcyHCi0Nc7pjKdJuyStU0/untXq6ML/LsZ47hz79xrpOwm6WVADabypuvvcZr
      r/wO1b671gNc6J3mV+/08eVHmziY4wt9clHKc72mKnhqjvGMu5wYdkoC3my0K+N0XWd8Lsj/
      eaGFh47U8PidddvdJGEbpEgAnfnRfvpHxugfnsQgWbjj0c/QXLPzj5SRuMx3X7hMmd/Flx89
      JC56c1TKu0D97Z3MxRQqDx2jyusisAtGRVVV48evdLCwGuE/ffV+sRNLDktxDSBx/OEHyTPI
      rC0tMDMzy3p86xdDzC6HiSVkVE1D03Q0fWM/2zS2LvjYdF3ntxeGONM1yZ88dYLq4vwtjyHs
      HCnPAB1nWnAXV1BavZ8anwu7c+vvkvz5t18lIStYTBKePBsFeTYKXHb8+Q5cDiuF+Q48DisF
      LhsuhxWTZMRsMmIxS5hN0nWbNd+MrkPH0Dw/fa2TZx5o4Pj+0i3/LMLOkmI9gM7scAfP/+ol
      Yi4/hU4nR+9/lIbKrdvSR5ZlRudChKMJ1mNJ1tYTLIeiLAdjrIZjxJMK6/EkiaRKOLqxGMdu
      NeNyWPA4rbgcVtwOKz6PHZfDSiDfictpwWmz4LCasVtNOGxmJKOR4ekl/ts/nGNvhY8/e+Zk
      RndeFOsBbs1tsh7AQMmeZr72x+W0tncTkw24MjAtuL7c+6ELYjRNR1ZUYkmFpKwSTcjEEjIr
      oTjBSJyVUIyVcIxwNMnkYohILMlKOEY8oWCzmrBZTFjNG386bWZC0QQOm5mvPd4sth0VgHR3
      iexu48xrXRx94hCzq0kqA5lu1gaj0YDVYsJ6k5FZXd+4ZlDVjT8VVUNWVJaDG8kRXI+zHNpI
      kkgswTMPNeLz7O4ZrUL60kqAvPwCmo6X09E6wtGTt9euJwaDAclg4MYDesGHFPDKZrdE2BnS
      qwphslF75yc45ZRwOnf+bVBBuCq9KwxDhL//zrfZu6+eI/c+zIHr5snL9Fy6xMzaOsU1hzhU
      V8Jgx5ssUU9DicrFtitYC6tp3ptPJJJHMjiMrfQgAZfYNE7YfimrQsyNz5BfVoSW3CheZbZY
      MV9XCVlHUVSU2BoD0yHqiywMLCySWM3H51jGu+8oU11tBOr8LI8ESVjzOHyw+r35pIqiZPxK
      /6rdeGcmm7F0XUdRFMzmzB+8bpO7QCqtb7xJ0T134gLAQGFJBV7XtQlgILoyw+hSkoN7K2k9
      dxZveQFzwVXcNgmTyYAVA7ImMzo6TtWR4xgwoGkbH1DTNBQlO7VCRaxbo+s6qqpmpYTN1Ypw
      mf5cKdNLVeIszs8TBcCI3VuM13VNUSstwqXLvXhLS5icXaakvJxoYplkUsfhctJ58RJxxcgx
      yULTiVOsLw+zEC6gyL0x/eBqlmfjh6rrelaOXrs11tXOwm46A6TsAk0OjhOor+EjZ8voKmsr
      qyRVDYs9j3yXA1CJxzWsFgNra2tYnflYTaDrRozIJHUTtnd3nL/dC2OJWO/bjQNhKRJggxyP
      EleN5DmsW/6LKhJg58TajQmQ1rtH12Z5850WDI4CDhxqYk9FEZKYPSzsAmnNBzBZ7NisRpbn
      Z2k78xb9U6uZbpcgZEXKBTG6Doqqc+DYfTxS7EeXYygGcQ9f2B1SVoZref15zvVNv/vYzKnH
      P8uxuqKMN0wQsiFlWZR9R05iC8wzMzOHikRBnlg9JeweKS+CbXn5lJaZcDhdaBgoyNsZG1sI
      QjpSXgSbbQ4IT/EP3/87XnzlN1yZXc9GuwQhK9K6C7Qys0ZVVTl7jzQSXbxxl0hB2LnSGgeo
      bD6Ce089Le19NN4l1tEKu0fKBEiEF3jx+f/HfChJUf1RfG5xDSDsHim6QCrnXnmZmnue5Gtf
      /xp1tllOd0zf/CWCsIOkHAdYX0sSm7hCeAKia3EUJQSUZaVxgpBpKccBTjz2IHOrG3d+PJ4C
      SqqqstAsQciOFAlgpKhyD0WV2WmMIGRbWrdBV0fb+Mt/+9e0D1/krZbJTLdJELImrQQIL4cp
      KHAwMTaFloF6nYKwXdIaB/CUFlG2vxKXrYI7D5dnuk2CkDVpnQHsngBVxW7GBnsZmlzJdJsE
      IWvS3Cl+idHxaTSDFadTVFYTdo+0ukBWTxGPPP44U+MTaIqc6TYJQtakHAgbaDnDuc4BZNZZ
      WSnmG988csP3yPS1tjK1EqJkTxNebYHesXmsvgqayx1caOvF7q+lqc5NJOJECY1iLtlPIE+s
      KhO2X8olkaHlRSJxhcLSAiRjCR7HjQtiJGoajlCrrNM7toKvfi8PVO+ntb2b+dkwR+59hKmu
      NqKqjeDCKmGDgyNO0wd2f8nEbjAf+omyeBdLxLr9Y6UcCT7+2NMcR2dlZph3TrfSM75E03Wb
      5BmRwwsMzkVoOLgP4qv0dE+wt7GJpf4uzGYjdoORhJKkt6ePvSdPvVcZTtM0NE1DlrPTrVJV
      NStxRKxbd3WLrKsV4jIlrbpAN6VFeeu1s/gry3AVBFgZaUfLK8blysehLTO1qrIeUzjWVEw4
      6CS0NEzR3sMU5m1cTIu6QDsn1m6sC7QFCaCwuLBIQlGx5nmwqDHCsSSS2U6g0M3K4hI2jw+H
      BVRVwkSSuG7GYd34YCIBdk6s3ZgAt/7uRhP+4pJr/sGF55pH1z4nSQB2xP4swu1CbJQl5DSR
      AEJOEwkg5DSRAEJOEwkg5DSRAEJOEwkg5DSRAEJOEwkg5DSRAEJOEwkg5DSRAEJOEwkg5DSR
      AEJOEwkg5DSRAEJOEwkg5DSRAEJOEwkg5LQtSYD4+hpTU9PEkiqqHGdmeppoUkVXZeZnpwlG
      E6hqkmRSRYlHiMmZLXUhCOnagiX3ScZHJtEkjdnVKPnaCutGO0PTy9T7dCaDEB6c5tjhEsJB
      J6sLw1Q1HsFuFicfYfvdelkUdHQdpkf6SNryiS6usO9wAz0tLdgtEqWNh5lrbcNW4+bya90c
      vPse9pYXXlcYKxslUWCj1Ia0UZpCxLrNY10tjGU0ZvZAuQVnAJ2J/m5MgT3UFNjonptFUVVk
      HVwGhWRCJapreExWGhv2s7K4hFbuw2g0YjQaURQl47VfrmU2Z68mqYi1eZqmoet6xpPt1n/z
      1AhDw1PoUwvMV+yl0u/g9JtvUFzbRJFH4eLpN3AU1eGQLOgBL574JLOrccq99uveJltngWzF
      2Y2xrnYWdtPn2oIu0K0RleF2TqzdWBlOXIkKOU0kgJDTRAIIOU0kgJDTRAIIOU0kgJDTRAII
      OU0kgJDTbouBsGzRNC3jc0tErK2RrVHn7E3CuYlsjQTLspy1OTO7MZau6yiKsqvmAm17Fyhb
      Ry7YXXNYtivWbvv/2vYukCBsp20/AwjCdpK+9a1vfWu7G5EIL3Hp4kVG5oKUFHvpu3yGKxPL
      BIoDTFy5THvfOPn+YuxmI70t7xAxFZLv/OgZiesrM1y4cImZ5QQBr4XWc2cZX0lS6nfRffkc
      fROrlJT46L7wDt39Q5g9xXgcm+vXrswOc/5iG2sJEwW2BGfPnmc1aaYwz8Cl82eZXE5SWuRh
      qKuVjt4x/BWVWDZz2NF1pkd7uNzaRUJyYZWXOHOuBdnsxi1FeOf0OdaSZoyxOc5faqd/YJA8
      fyUu2yb60JrMUG8HbZ1XMLn9JBaHOX+5C4snAOuznD1/Gdnswaaucu7cJRbXVYr8Xoyb6bIo
      cbraLtEzME6e18/SSBct3YN4AqWszw5wvqUTs6eI+MIIF9u60SxuvG576vf9EGoiTMvFCwyM
      LVBY7Gek/fzt0QVKRsPIko2p/m4K/XaGg15qLCuELBKLcwYOVVsZXjNQ55FpHZqkoPgQDTUF
      H/l+0fUgRmsew60t2AIOjPYq9KketLIiEut2iphhxV1HZGGCI4cab6ntoeAadqed3rYrYFWp
      3NPIbG87ePJw5Vegz/cQc5cRjagc3lcJRgnjZrq2uk4wFMRpk+jomQQ1zMHDTfR1XsGAQk1j
      MzNX2ik5eAKPRaO3o5PaQ83YpU0EU2XWIgnyzAnae2fRUWlqrKWjawQrSeoOHeJKVzd5yHgO
      HGVpoJPqg8dwWTeR2Uqc1ZiOMbrA7Oo6a3Erh/d4uDI6i5aEQ011tLd3IekSjUebaGvr5K47
      jn/8OICWiBBSzESmBsEBE8GC26MLZLY7WB4fQPKW4SKJ01uI220nHgljy/fhcDiQ5SgDk+sc
      rC0CHW6WtXang6n+TvKq9+HQNBx5TvxeM8GwjMPlwed1Eo6qJFemePXllxmeC2267S6XnYGu
      borq9mKRTNitFvJdJsJJA3kOO74CJ4trIRaHB3jj9VcYX4ptLpAB7GYDvX2j7Nm3B8lqw2ax
      4bDqRA1W3DYzrjwLiaSGHJpBcZZu7pcfQDJhViN0D87TsL8Si8OJxZqH2ZhEt9hxWK1YLRJe
      v4/uc2+zHJewbDaWyYohssD4qkJNkRu7Jx+rzYVRjWByuLBY7JjMJqpKXJx95wwTC2ubiwMY
      LA7ii6OEzPkELOD0+W+PBAhO97Go5FFgN6O7A6wMdTE4Po/bW8r6TD+j41NY0IisL3H+fBsD
      gyMoN3m/yf5ulLwALrOO0WJjZnyE7okIFf48FqaG6B5cJFAAgfIGGupLWQtGN932npYW3GVV
      WI0qFlTGp6YYX0xS5pIYn5ygb3SVurIAvqoKDh0oJ7gS2VQcXdPo7uymsLQUg6ZiTkYYm5xg
      JWqi2JKkb3ya6cU4LoeRgeFF9tUVbfoz6cl1uvonKS0NoOgGlNASkxNDxPFgk9cZmZggFIPZ
      hWX2NzZjN8aJJ272P3KTWNFFusaClPnzUS15RGZHmZoYAnsxWmieqclREpoDu8dPw74qSvyB
      TX+u5No4w8sQ8NjR8vysDnffHtcAiiyzurJEMBglv6QSjxRDthVSXVpCvlNnNWFm3946qqtr
      qK6ppqK8FIflo/u2qpxgaWmZ9UiC0po9aOFF3OV1lPp8mNQwuquUKr+XeHiB1YSVA3XlmDbV
      LwFVjrCwsEw0oVFbv4e12RlK6g5QGvCTCC7gLK2nLODFqkaZD5lo2F++uS4QkIyGWFpeI6GZ
      qK+rZH5mkdp9+yguLWZ1ZpLi2v0UOCRMVicuh21zQQBd04mur7KyGkQ3u6gt9zK7sM6Bg3X4
      C70szi5Qu/8AFSWFzExO4C2pJVCQx2YuATRVJRxcYXUthDnPT4XPykIIDuyrpTDfzsxciIbG
      /SiRFaYWozQ2HsAibe64rSkKa6vLBINhHL4KAg759rgGEITtclt0gQRhu4gEEHKaSAAhp4kE
      EHKaSAAhZ+i6TiKeQAfkRAJN10UCCDlEk/nNcz9iYiXIz3/6cyKqLm6DCrllYegiP3/xHPWn
      nuBYIC7OAEJu8dc04rYaaT5Qw+VXXxIJIOQWg2TG7/dhkST2HW0SXSAht4kzgJDTRAIIOe3/
      A32+CuSUjOZoAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Andrew-Vehicles on Road' width='192'>
      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
      Q1MrDPS0HwEBYDBugldPH2NibI6VzApvf/Au04+HWVpe4fV3P6Aw8wihfeTAJd6/cHpH54dg
      Aua+k2fw5iepumVIvUKPv0RGeuTKHZzvMUyXYGZ8ke99/yNSiciON/GUMgy89Crl2XHKlIh1
      naO1ME3GNVRUN6+2lZk13bxz+RxNriLZ2kNLcnsxoX0iLT2c6IgxNzfHciXOB2+8xNCjEbI5
      j3fef4vhhw+oZrOceecDFsZHGBgY2N5BlE+srZ/+lGR5ZYGlajPvvd7P8Ng4mazm/fffYOje
      bXJ5n3c+eJfhoQecODawwwHziHccoyeuWM0usuC18/aZDsbnMnS2d1DIr9Lb087Q/QkuffAu
      Y0MPOf4UW8nuk7TLMoXiEgt+N5dPNDO9UqS9tZ1iPk1vTw++MhTyefp6e3ZuayifVO8pmv0c
      FX+Fef8YF/pc5go+7S2tFPMZenq6j0AIJARxV3PvwRivnnsFJxYnHo2TiGnKMkZLLEJzU5QS
      CWbuXuFXn31OprzzvfdYMsnC6D2ix1+h2a+SbGmlsz1GLlsi2dpOa2szpUqa9Owiv/3sV9x8
      PLtjL328Kcnso9skTp2lSSuSzc30tEfJZKskW9pob2uiUPIwfon5VUVvR3Ln7+nGkMUlRpYq
      vDLQTryllWi8FUcXcBIpYtE4rgsdHc18feVzqk7Tzs/YROKQm2Mqp3mpq5lEaxuxRArp53Gb
      W4hEE7gRl1P9Kb74/RdMLmZ2LlckgcpMM1d2Od4aJ9nWQTzRjNEerW2ttWedFMSaSUZiRCJP
      cblIEm95ghWTZKDJpamji2RTE0op2tpb175PqrWtNin2zohoktLCKLloGz0RQ1NnF81NSTxf
      09bWWrsNsNstyBcAo33u3L5P98AAKB+3UmB8cpx0KUKPW+Hh+DSzSxWi8RjnL15moCNCvuDt
      aG9+9AE52UZbXCISKRZGh7g3nqGvp5P01EMeDs/Snuqj92Qnly6dxS8UdhTA9KO7lBNdtEQN
      IppkbnyY2+M5TvS0sDQ1xL3hebraYmQWpmnuOU7kKQ8FmtISt0bTHO9px48kKM6NMzXxEB3v
      g/wik5OjVPwIc8t5Ll56E6+YZpsJ3ANbxQVuT+YZ6GrFj6XIT48wOTEMyX5UZo7pqRGqOkmi
      tZsLZ0/S19W7Y7l0YZZ702X6O1OoRBvZySEmJ8dwos3kMmly2RzpnIdbXWFsaoJiZefvqHNT
      PJjz6W1PopIdZEbvMTYxSSyeIJsObGVyBQq5DNlslvRqfsdjX0mPM7ICPa0JdKqH9PAdRiZn
      SMZjZNMr5LI5VvP5IxACGSgXV1lezlA1Ec68coK52SVeOfcaff19pGcm6XvlHD2tceamJom2
      n+RUX+uOj0Ior8Ly8jLZbIHek2dwK2miXSc51tVN0ilTinTw8rFuOlpiTM1mOXP2FeKR7WMq
      5VVYXlomly/R//IrUFimqf9lBjo7iZkiXqKHl3rb0ErQ0dXO0yo1rTT57ArpTBa3qYuT3Qnm
      MpoLr79CV3uS2bkM5y6+Tm9niunJaY6ffo2WZHzbq4D2FbnVFTKZLNFUN8c7oizmJa+ffZmu
      tjjTcznOXzqHn1tmaqnEpYvniOwwQ6b2fVZXl1ldzRFr7eVYq2S5EuW10/3MT4zjG0FZu7x6
      +hhzs0ucvXCemLuzrUwmsJVoH6AvZVjVSc681M3s6ChKSKrGxRRWqChDsWLo6mrbthbXvkc6
      vczqap5k53F6klWKspXTJzqYHhlDC4knI7Yb1NLYvPAhkMXyLFgBWBoaKwBLQ5Rfg8wAAADO
      SURBVGMFYGlorAAsB4LRikrVwxhDtVLlsHS9WAFYDgRVWuA//qc/I786y//4s1/iP+8C1bDd
      oJYD49Zn/5M/PErz0U9/RvPit1y/P865828wP3KX+UqSf/YPLvCX/2eQU5fe4IfvnjuQMtkr
      gOXAuPTJDykVHd44Jvj1L39HWWkK07eZWMgxcu8WS9llVqopPn77tQMrkxWA5cAQkST9PW1I
      keT1iydRShCLRyh60NnRgeNE6evre+ojIaGXyYZAlkbGXgEsDY0VgKWh+f/m537JVC1eFAAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ashley-Dashboard 1' width='192'>
      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
      qREOIDA1/x+Rt0FXmcI8NAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ashley-Dashboard 1 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ashley-Map of District' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ashley-Resale' width='192'>
      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
      mIUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ashley-Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ashley-Sheet 1 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Renfred-Bill Size' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy915cd13Wv+1XVzjl1zgmdATRyBkGAICUGK1iWqWDJ9jjn3Id7xrl/gp/v
      y331HePYlmzpyjqy5CNSpEiCRA6N1LnROae9e+ecKtyHBgECBCmIBGWTvT+8YO9etWqt2vWr
      tVbNueYUNE3TKFFimyL+RzegRIn/SEoCKLGtKQmgxLamJIAS25qSAEpsa0oCKLGtKQmgxLam
      JIAS25qSAEpsa0oCKLGtKQmgxLamJIAS25qSAEpsa0oCKLGtKQmgxLamJIAS2xrdk77UNI3S
      PpkS24EnCmB1dRVZlv/UbSlR4k+OUNoSWWI7U1oDlNjWPHEK9Djx5XF+f/EqGcVMZctOjuzv
      wWmEeCqHw25FFIRHy/vvsSk30VZr/sQ65WIWWTNiMvxpNVgMDHEz2sjRDgf+ievcCjh59ble
      cqEN5qI5ulubEIU/XE+hsMrkpJ6dOysACM5c5c0PJtEMOizeRl7++nPok8tcuXSVtbhCbc8h
      Tva1YpCeovI/Ak1TySQiJDJFDFYnDrMORQGjycCzPRMoxSzRSIyiJmJ1uLGbDQjP+CSaqpLN
      pDFa7UgCaIpMrqhgMhoR0Mhl04gGCwbds7lvnqoWJW+g5/Qr/Piv/pJOR5I7wzPIxRyr/iCq
      +oTyxQzZgvKpdcY2xpldy36mRn8eBJeP4uoKBbVIIKNhjfoJyRBPBVEV01P/oJpWIJ0uPvys
      N3Hopdf5mx//gDM1cUb8kEmk6Dj5DX74+mtIKT/ZTPFTavxsFMKznDt3mYHBIQbuzREKrjE9
      u8bnndcq2RijU3PI6v2ainEGr13i+q0BhgYHGJlZofiE3/7zohTzDN68RvL+pSomIozNzCFr
      ABpTQ9dYiX2W6yjjnxhhPa2gZNZZCuSApxwBPkSUDDTs6GZpYJJs2kMgEqe9Jcds/zWu3ltG
      b6/gxEsvYS5mGbvyOwYuF/C27OWlQ00sj9/lxtAsxrIWDneXcfHcZTazd5ndcYAzpxoYPH+B
      +c00td2H2b/Dye333mE5JdK89wTHeup5Vg9OUVeOVX+PaLwBRdFT3ySzGSxgi4Ux13QRWx3l
      woW7xFUjnUdOc8gV4oP5IvLaGOX7XqEsOc6FW5MUxCIVO15+UK8m5/FvzKPLaawFrLT3gsfQ
      iUeTiayvYbK70Bv/qMv9h9GyTA4u0Xv2FZrselRFIRVdJZ+KsDinIJhcNFR7KaZCrAViaDoz
      ldXVGMmTiEaJpzJoRheNtT60Qpr1tQ3yqg6nrwy3SY/H5bj/hNSIrCyRdTXzteOt6AQNWVHR
      iRqFdIw1fxjB5KKu2oecDBNOZ8lmCti8FZQ5TWSjQTYiacyucqp9FlKxNBpZElkDZU4Bvz9E
      QZWoqGvA8pRdl3NJNjY2KQgmqmoqsUgyGyurpIrgrazHaS4SXAuTKRQwOn1U+myY7F4Qs6zO
      jnB3vRJlR8UfJwAA4f4jUlMVsvkCmiZhttuwmIwko/OMz0fZ7zLSduAse1r03Hq3n5VNgcu3
      R5BMDqJLA9xr+CEvvXgCv9JJT5OV2Ohb3JiLUeWQGB64Sa1nP7G0SGtvHx0N5c90oSKIEiab
      iXgsgCy7cDU4WfWvEA4L1Pfo0EUtOOwW0uEgt8cWOXTYQDCc5ujJb1Ipxbi8KPHN7/8YnTzH
      wPDDejW1SCwUQI8RvUWiWFBBr7I8NcJm1kxXdxeWZz3dKyZZVV18zWFABESdDkEtsLY4Qyrn
      I7QyifUHLyOF1llZi6OoBeJZHY3uGJcvjuCq8rG5OIH9R2eJ3LzKdE6PWc5RXKvleK+LidlN
      yn1liGhEUzl8rmrU6AJvXrqFVLmTM311TE1OksgUUfLTpKUzOBaucjlqo1pfILkS4bmdDcxM
      TZIpiuRnlpFOH2Tx+hUiIvhqd2LRsqysbaCqefwxkf295Y91UmZ19CoTQwOIgkayKHC2pcjk
      wHVWUzoMaor5cB9HK4JcH4tTZtchm32YtHWuX5zBV28hMDDNka8fIzI4junkHtKROPGoQGDT
      +McJQFNl/KuLKIL14dw9scFgQODFb3yD+Hw/97IFBEHEYNDD/YFYkTXKW/dw4lAfklpEwUgu
      qFIoFtFUlUJOY9epVzje4qSYL2A06aj4mpON1SnOX4vzZ2cOY9I/myFAQMRjsrEwP4ax+UWc
      xjTzsQsEdfvo08H03DS+3S9wwLDCm4MFACqbu6j1WiiGIwh6AwYdFLMFZB6ucUSDjY6+Tjob
      TKQWr3JnOY3TNsWGVs++3WXonmZh8ceiN+HQ8qQUcEj3v5OMNHbvp7eniZVLl8lQRIjFWV2a
      J53O4sp7qfG6aerZT093I8vaJTLZEGu6Rr5+ZgfZ0BKDk7GPncooicTlAgZPIy+dsTEwu0Ei
      EmL47g3ykhMBEGqTeI1O9hw9QYc+yq2pdcKBae72jyA5rCCI1CUPIgoGdp44RY1ZIDgzyPrK
      IqlsBoxGej4mAB3VXYfobm9HL2iM3b6AXCwQz8HBk8/j0se5+tshsh3NCIkZYmI5FZqGIuqp
      7djL/v3VBIevspIsYgAks4vunnbS3iYO9zifUgBCirvvvsctwYqjvJHDRw9hEONbi1+zA1/x
      Dr/+1Sw+rwFTlQBygcHz/8aAXk95+172VVYTm3yfX/7iHka7jwPHTlNhMDHx3v9iZfEgzx/p
      I/2bN/nFTQl7TQcn99QwcvESK2mVis6DSM90CBDwuU2cv5Hl5DELBqFIIZjA3ONFBGw2E7fP
      /ztzHjt5qQkEEVEUEAC9w40vP8A//3QEm8eIr/L4g2qVTJRLH/ycG1YdOoOTk6/pWLo4wk3/
      MOM3AHMNr/zZKSqsxmfYFxs7KnNcvj3Lc7uqSSVSSKqKKAgIgoAggKalmF+Hl779XTJLQ4ys
      bR0qiuL9MgLojYiRKQKpBnSJONknLN/KKt0MXh2jotyNV5UpFmX0BgOOyk4Onz6FQ8gRz+jQ
      loWturcuNQajk4rOPbxw6gBaJkhOD2mLC6dFh6BlmF9Lc+Tst7DJS5y/EHri2kWUdBiNRvSC
      ik4SkUQRTS4QjiXRqctETQ70ipVjZ88iJ9cYGZ3Ce8KDXCyQz8SYXktS2SDyYMWpacSjEfJ5
      S8kO8GVHU4tM3/6Agdko5R372NviJpWG6hof0akptB1tSAt3efv6LGWNO6j1lVFbbSGREqip
      9hKemkJob4WFYd6/dg/VYMJV3sFz+6tZ2Eiwo7mRD1+4pAPTfHDxNknVyI49R+lrqyC1NMK7
      N0ZRjR4OnTqDJ7lItqKdSjHFgj9GTVUZq2M3uDG2itnbwHOnD5BcXKeivQkTGtmNSd66NISp
      uoUGq5PmnU1szE5R3daLRQdyJsFKJEV9TTUSGitz45gq2rHmV7l8+SYxsYyTp49TLoR4/73L
      bOZ0HDzzCjWmeX7zT9cRy5y07jnKvvZyNoanMPZ24iXNjbffZkOpKwmgBECWiSuX6J9ZQ2cr
      Y//R52ivcTzz16h/SrLZRaamTOzeXfmp5UoCKLGtKVmCS2xrSgIosa0pCaDEtqYkgBLbmmds
      my/xpyYZWCCMj/oKO6KcYi2iUlPueGLZQjLA5MwaH+70sDiqaW6txPAZz11IR5ifXSSjgGj0
      0t3dgP4z1gWgKXkCq0tshNOYXRU0N1bzRfhKpoNryK4anPrSCPClxz86yLWRu8SyKuT83Bpd
      +eTC9w1f/ulbrCaFz+3JmYxtsrIR3rJ4fe53phrLYze4fW8NDY1kaJlQ6vPW+WQC47dYyWz9
      vzQCfMmRdG4a3Tqmlvwcrn34fdw/x+T8BqrBQ2tHE2U2MwZbOb195ZiyixTb+mgvA03OMDky
      QqSgp6V7Jx5Djo2lFTYjMYrmcvb2tqBXM0yOjBLOavhqmmmur9h6MosGqpo66G6v27r/NZnQ
      8gxTK2GcVW10NFeQXJ9lPZoklpCpa++k3mshujbH5IIf0e6hrXkHHrseyLPmL3D09At4DA/V
      JOeTLExOEMwbaGnvwEkWf2SdzY0okquenZ31qKlNJidmyRu9dLS3IubiFNQCK4tBalobSCxP
      sh6Tcda00t1Y9sj1K40AX3YEkdodrRSXFokU75t0Cmv0989icJWRjy6zHvikR6mKf3yA1ZyA
      oKQZGxohkggxMjyNweEkPT2NX86zdPcqq0UrHruZxelxch+6SshJBj743/zjP/wDP33nDhn/
      LLemA7h9HqKLd5hYS7M6cZflpIhTSnJvIUAxtMD10RXsvnLU0DRz4cL9ysJk8j7MYpG7537B
      T//lZ8yEITQ/zEJUQciF6B+ZJbO5wsj0CjaPh+TcKBtZmbmhQaKKRG5ziZH5VaL+eW5cuk7O
      YEMvQKGooNOpzA2Nk1AeNXuVRoCvAKK5ku7WBcZG11HwoW2uYOg5Tl+rhTklQlb9JFtnmtmJ
      JYJGC0nAVulCwEBtWw9dXa24Y3GKJFnKlHPmVC9yJkkkHHx4uM7OntPfuD8CaKwO3qayrZ2u
      xipCDpnp5SBljkp6e3ZRm58nvKIjtpmkYXc3PZUVrBdWWH5QmQO9OEFO07P3hddpnb7EfBFi
      U6Os5ytxGkDwVgBmmnt66aqpwZEOklMjTI6uIFdl0AM+VQIEancdZldzFZn4CmvLfpKqwuZM
      irCmPjJbKwngK4KrphNh8jfEFCe4yshcvMuMrp71jTCOppZPOMpMTa2TtL6FriozBVV6wpTA
      TKUYoP/ePOVCmvin7GFyl9kYmZ5jnhybi6tYmo4jBJYeKWNzSdyemMOazxIIxODBet1GubfA
      3dvDtNW6SQQS6F3gqmqgXK6hu85JMi8BucfO6qS6wYVa10utQ6Ogs0DGhM20tbQvFFOI1lp2
      NdkYDY18rM3S3/3d3/3dJ3epxH92BEnC4nRi0hmwm8yYnD6qK8oQcpssrWwQyxQoq2qkwv1w
      q4ko6rA6vFj0Iq7qKpJLU6xsxrC4Kyn32DAaTVitZiRRxORw4bYbWJudJRhLI2sGmlsbMYhb
      e0OMJjMWsxEBAYPdjUONMzW3iq22l95mHzpJwmx3YpQEJIMZt9uJlgywsBIkk47jqO2h2qED
      BLwVVSixNeaX/AiuJtobfLjLyihuLrLkj2FyV1DldWA0m7EYjQiihNnmobrSwebiLP5YEU9F
      JV67GZPFismgR6+zkI8vsxZXqWlopLLKh1nSY3F5sehKvkBfTQoRzr/9LovhLGVtezl5sAeH
      UfrDxz0RmcC9W7x7cwLN6OHgqTPsqLQ/1b7pJ1FMrHP5wmUWwzmqd+zj5KFuLLr/OLe7kgBK
      bGu+8muATCZDLvf4vLFEiS2+8gJ4sOupRIknUJoCldjWbDtDmFbMkSmogIacz5DM5AFQFZl8
      ocDTPg40rUg+L3/0CwrZFJFwmGgiwxcQMqfEF8C2E4AcHePyYAANlcXxy/z293coAMnACsPT
      i08dUKpQWGFgwP/gcy65wdX33+PylatcuXiX+BfS+o+jqTLL4/289+573J5cIZmMsRmMfe7A
      WE+ikPRz4/y7vHPuAlNrUT7RvvY5UOUiK4tzD6zNSi7N+mYIRQM0jcDqHNHMswvcvO0EILqb
      sCaWyRQKJFQHLdYU/qxGMhPCYi5DySfxr66wvLpBKleEYoZEOkd0c414VkHJp1hbWWZ1PUjh
      I/WGlqcxtx3n1dde4+UXD2D/k/RGJTp7k0G/no7uTpwGjUwyij8Q/dwCkNNhbg6PU9y685CT
      a1y8NIC1rpPejka0fBrlCxjmVEVmeW7moQCyadYCm/fFpuFfniWS+fSog09GZmWgn8Wkghyb
      YGAmCWyDRfDjiKITizlOJJZHlSUqm+1E/Rms0TiWHU7SsVmmJ5bIyzmk6j6erwhxbjCMWS3Q
      vsfE7NRt/DkRSYiDo+ZBvYlwksq9ZVshXIzPMPTJp6GlmZyTOX52L577r/njwQViq5O8PTsA
      3nZeOtZNamWEy7dn0Cw+Dhw/hkuLsjA1zeJqANndytdP7kRNbnD10nViRSstO3fTUWXE7XDc
      j/uqEVrbxNu+i51tNR9pgEpyY4ZL/WOI3jZOH9tJbuUe4+ubbPoT1PYcoK/ZQ2BmiP7xNcp2
      7ONYbwVrs2soWoSFsI3dzRL9/cOkZBP7nj/Lp4ST/WjHyYaX6b85QFz0cuTYIcpNWW58cIG1
      NHQdOkOrN8XQlTH8iQTO5l0c6a1HZ3RjUDa5cvEKwxsWVqZbt58AEEUsNhvx0Ayyrga3Rya8
      dI/1qJ0+h0gunCQU3CCajBFLeHi+worOUc+pg82IsQ38rnpe3NmJUpxnYOBhtSazgXxORrPp
      /nTRFIpZIqIF10dtXKpMRjWx7/g+Vq8OsE43TslMRV0duVSEidEFdjapLAeL7D1+guUrd9hQ
      Gli7NkJl30k68wEmVwMUPW6W1zdpqq9DQiOVz2N2GsltzvDWe5dIuzr55pEWrg9O4a6sQQ6P
      cnWqkfbEPAlzD8cOyIwsrhAyJRmaCVBVU0F45DJTDd8kcm+IdFkje3oa0OcC+KpqcRXjjN64
      h+/5HY91UmZ56CLDt24gABnNwNea8gyOj1DRfZgedZX+G/c43pZmlUp6e8vx2ETkYox4wcOx
      kz1M9d9lrt5DcX4Ja+tJ9u7tRd2o50CXZ/tNgQRBwGuysD4/i7G6ApvBRjE6Scxei02A8OYm
      Hae+w3e+fhSfeev54PKVYdZJSDqIbobJqyrZaIzMR+p1+DxMDw2TL8qk1jf+NGsAvZVyNUHw
      o7FiJQPV9Y2Ue8soc5lQybA0s0quqKIpkEmnUEQjNQ1NlHl9lLnNqPkkGXczXTU+7A4bOuHx
      CZSAzaAjns1gKm/j29/+Fp21drLpLJlcFjQNg7eFRq+ETm+nqaURn9uNzWoinQ6Tz4pomoCv
      tQ2PBAaLj779u/HaRdYXV0hmZTRBIh+PPjKt3EJH/e7n+NFf/y1/+zd/zYmuchRZQZP01FRV
      UNbUhjsVQanuosWWY2lmlImZTYqihKusAo+3nNYaO+n8/WmTKGG2mDFZbNht5m04AiDgrfIh
      LNTRUKlH0qzYjZU4Gj0IQGVdPRfO/5L5igbqahrAJFKmbu1zkpxVHG5a599+9nMcNVW0NjQ+
      qNXbuIu+zC1+9fOfYaro5tXqqj9BVyz07i7jd2/+ntpqN5rRSVO56dEymkpeUdGbdciihvak
      ebvZjTs+xLmrUcyFKAkqPlakormJ6XNXOR/ZwEqWqGqnq9mBQ6enIIhY9SDnPx612emqRNSt
      IYoSOkGmIIOoN2HUCaCpFBQFvWREFHnqN3A6gx6bXuP29WtY1Cipmm7MiRgFnQmXRyKfS6Eo
      Ehuzo9yS51kL5Dm6w0jgQQUm1sdvMCC3lewAX3Y0TSGyvshGJIvVV02V20ShCHa7hWw4DB4P
      YmyDmdUIVpcXu9mCw64nX/hIGa+D1OI8i4E4+Vycgq6e4/vriafyeN2uB34/hXSYxaV18poO
      b2UtlR4bhXiA+dUgqs5EbUMTpkIc2erFJhSIpXLYbRYSwTVWNxPoLU4aGmsoxJNYvS50aBRT
      YWaX/Ojsbpx6E65yF6loGLunHL0IajFPIlvAYbcjopGIBpFsXgxykuXlNXKChYbGeixChoX5
      ZTKySHVTGyZtjsvnAtS2leGprKXKayW1GUZX5sNMgdXZWVKaoySAEgB5FgZucWtqBaOngaPH
      DlJm/XJPDgqFIBsbehoaXJ9ariSAEtuabbcILlHio5QEUGJbUxJAiW1NSQAltjVf7qV+CTZG
      LzBNO8d6q5FyAe7Myezrrnli2ZR/jDfevvVgW7m3di9nzu7C+hnPnQrNcf7dS4TyIDlb+c63
      Tzx1krsnoRaSjN28zMBsEE/DTp4/sQfbF3CHbk7codCwj1pLSQBfejLBIiFhhNWIhwZDkhV/
      /hMFYK3o5vW/7mbmxr9TbPsmXb7Pd+58UaB53xle2VH3DNw/NEauvkfCd4Af/qiadGiFXA5s
      ts9d8cdIBVbIVO+jlpIAvvQIooGWWitzSxvUtd3/UlNYHr3G1cFZZFM1h08dpq3c+WBnnPDh
      P0FDyQa58M57rGdM7H/+JRrsacZu3mXJHyRraeRbrx7FlAty/t33WU9o1HTt4+jeTiw6AI1i
      Pkcmk0GQ9Fj0CtN3rnD93hrlbQd47lAXobFLjK1H2dzM0XX8DPubnCwO3+Dq0Byip4Ijh0/f
      t14nSRXK2d1Vi1LIItnKcZkgn/DTf+kSS2kT+46dpE5MMLY4xtLMJlJ5F19/cT9KYIpLl2+R
      Ntdy/MRRDOkNktkEYyNr7Dy6l8DgBe5t5ChrP8jXDrU/cv1Ka4AvO4KAt6UbT2SOhfh9P/nE
      FMN+B6+8/mMOt9vIxfOfcHCR6csXCBrKqfIYGLxxlUg6Q1Kx8+Kff5eDNoWAmmG0f5C649/m
      9e+8ijG1ej9pNSBnmLxzmd+9+SZv908SnbvHAjV8769+QJtljeGpMIl4nIqe53n9a7uJxxJk
      VqaZyrr4zl/9mBP1OgIPXJuTZPNW9EKRyVvn+O2vfsboJiwOXmSl6KTKXuD8jRGK6QQZXSXf
      +P732WmNspHJMnDxBrKzGltug/6xWXJxP/cmAxw4e4Y6lw1XRS2N9RUEh0fZfMyHuzQCfBUQ
      LLR0V3NnaJq81IKaTmGp2YFNLzz0f3kiBaJpA81dTZQZRNoMViw6GW95JRajEYvVSJECSdFL
      p8eIkMs/GgRXZ6X36IsPIsOtD9/B6bajEyXsHg/BYBaj2YXL58SYD2PQ68hlc1TU+p4Q9bkM
      i36AcKqH3uOvUVd+kUUgm1WoaW6mwSHRoLNBPkFFjRuTTo/VaiJHmqziobm5CbvUiM5eBpEl
      Wnc1U2nTkwgvsBYUqW9uILc0TpZSaMSvJDZfE3bhJhOpGkRfM+qN93hjzkIul2dH3+Muxh9i
      ob3by9t3h9l0mHBVtdBe/9hWHsFKmyfNv//2TWwGA0Xhk24ZgbKGSu5du8ubk4NogpFdR3ei
      zs4/UspZZcd/8RYrw0a0QoSKvR/+xUBzSxm3zr/FgE6HIBfpeA4cjY1MDA2RslvRe5vxeR8/
      v4eGRo2RoRHsViO+VivVooRe2vIRF0Ud+cQaUzOxLa9THtVwyRXiS04xm0Uwm9GhUcikyKh6
      XMYcYyOzpGSFaCxGa89h2moe5gwoZFNgsGGQtrZUxqNRCqqAyWLHapKQZQ2DUY+SzaKZ9CRW
      5phdj6LIBbKqnSPH+jCLoMhFZBUMBv396NAq+UySRLqA3mzDYTOj5LMIBjM6rUhWBn0xyeTs
      HKm8Sibqp3rvy3SUbd3UmiqTTibI5GV0BjMOhx1RK5KKx8kpYLTYsOlFZFHEqNMh57JoBjOi
      nCWeSKEgYbHbMQoqmqhDr5PQVJlUIkZekTBIesxOK2TTqEYbRqkkgK8mcprxoWE2E3nctTvo
      bKnGKH3W9zQqibU5hmZWQO+gfdcuym36z/zWR8nGmBy/RyBZwFfXQVdLJf+BgeFKAiixvXni
      hG5lZYVi8eObG0qU+KpRGgFKbGtKdoAS25qnEkAuGiWU2kqzoxYyrK6tUfgsoVmeiEpkaZzx
      pejnjqamaTn8ayGeWdNKfOV5KgFkQiH88a04B2o+zdzC/B8vAFVmcWqYcObRr7VCnLHFMMGp
      ERL3c1wFJ++y/GG5zVHurn48VsCT0LQsS3PrfFrcsGJgmGtTcTRU/JPXeOPSGCqQCW0wNrv4
      1NHOCoU1RkcfmpmCs1f5x7//n/zDP/6EX7xxmYQM2egK5/79/+OffvIz3r87S0F59rNNJRfn
      1rnf8NOf/DNvXRsnGFxnZm798z9MlCLJVJoHM2S1yObCCL/++U/4yT//guv3VpG/gMBYSiHH
      8O3rJO8vQYvJCPdmF7bOpWlMj9xgNfZ098OjaORTCXKKhqbkyNyPEvHZDWGaQmx5ihuj81gq
      Ozi6t5Xk0gg3RxfBUs7eQ/uxKnFSmQwLkwsYDHkGR6cwedfo7jtAb7MPEchGYmD3UW4PEIlk
      objMlavXiTtXqa9vwbpxhdvxGVar6jlzvIWZgbssRQrUdOxlb1sFmfASt2+NULTXsKevfqtp
      cp75xWXKapuxmx5NDCG4PBRGlym07cCfVrGENwjLPcipIIpc9tSpQzUtTyr18IbWdCYOvfQ6
      nfVGgnd/x8gGdMoJ2k9+g1PWIpdvDJPN1GOwf9asvE9CZm2on3T1YV4/5SOTSiPnYmSzn19o
      aiHDij/CjuZGdIJGNjjP7ekoJ77xfTwGmUjiiwk5r2kaqUSCD58VmiyTzn5ov9XIphJI8mfp
      n0p8fQWlthNfdpLBjSaO9jifVgBJ7rzzLjcxo8l5FE8bvbEAd+/N4/R6yS33M1DVSKugx11W
      QSYVZXJyhfaKLP1XRmk4cIImt0ShqOBo3EddmePBe+RQfBOXvQWPmmcpEqKuuY6utmaSjQdo
      cZuRHBuEs10cbLRjUBX0NhdVUp6NobtsNhxl+uY4ZV378JpFjCKko6sMXA9ia9xD/ROyLIu6
      Cqy6SWKJRhRFT32TTCBYwBYLY6rpJLY2ysXzA8RUA11Hz3DQGeT8goK8OkLZvlcpT49zoX+C
      vFikYsfLD384JU/Av4ihoLEWtNHaCx5jFx5NIbKxjsnmRm98xoZ3JcFM3MnRg1UYBDC4XMQ3
      Q6xN3Gb07gVyhnr+8i9Pk5m+zjs3plCNLg6cPEu1Icida3cIxFOkxRpe/8FpcvMjfHB1kHTR
      QF3vAY6024jGU2jaVmS4YChNQ3sHHinL2loIwexGUPOsTg1y+dYkgqOG0y8+jzp1kcsrCbKh
      GL7Ow5zeXcP80DVuTwZw1vdy9lQns9eHyBJls1DH4TaN85fukpJ17DrxKjtrHo+qp5GJBpif
      N6JDYzOew6YpbEzf5uqtcTKCjb4TZ+hyxnjjzUvEiiI7T75Gd3mQc/92h4SWRV/WwUtndhNd
      iaD3rnLuvcuMbPSzON7+tAKws++lb9JTU4OcDHJteJJMKkYilkJnsiF66ik3JmlbrvYAACAA
      SURBVFmZWicpSMiZPBkpgVphoqprL71NFYiqjNNhw+XxYnsQ/k5heegGQ8kZnMSIuvvY31mP
      w2ZD8pThsQMJOzaDF5/HSGx1Cn8wgqQzUMiESMbDxAyNHG2sQgRUJUI2sUmoWMHx/S50T8jj
      IwgSJpuRWDSALLtwNThZDawSDgvU9+jRRa04HFYykSC3Rxc4eNjAZijFkZPfpEqKcXlB4Bvf
      /zE6eY6B4Y/8THKRcGANUTYhmXUoRRUMKivTIwTSRrp6urA867TnmkIBCf0j3RSwVbbz3OFe
      lj+4TBDwWBzYbBbiiQgTE4t4e0wYfG186+VuFt+/RLgQYXE+w+k//yuMqWUGJxNoqols7qET
      nSwXERFRCxn8S9OsFpyc2lnDlRt3kA1uVP8w1yZ2c0CVqdv1PPs8OW5OrBFam6Z/YA6jy8nG
      0AUmd3aQjwSQOvfxYnMNamQem92GnIwxdnuStppdj3VSJZuIsKoISIJGJJWnsZBndmmTI6++
      TpmwzvlLE9Tu1RHHTffuTlqrLGiyirtxH18/Wsf89SssJXIImSx6RzUvnD2B848bAT6OxenG
      bDZgdbgwijLIRTJFcJW5ySlZEgCChMVk2HLDFQTyqRiTo0PIba1U+2wI6Xli9hP84LVOjFqG
      kfdvspzVMIhpJu4OQFsTbUYL64O3GC40UGaUEfVmXA4zCUkAUzW1wnmu3srhtFqpb/Dga+jj
      aI+DO1f6MRzbh9eif6TdgiDiMVtZWBjF2PgiTmOK+dglQrq99OlgZn4Kz85T7NWv8tbw1kS0
      ormbOq+FYjiCYDRi0EExW0TmYSBL0Wija08nnQ0mUotXubOcxmmbZl2pZe/ucvSf2RL7KUgu
      Wk0RhlZi7KqxU8jlUZBwut0YdXpMJh0aMQaHQxw88wqEZhlbKqIJNlxuNwadHpNZD5qMojNj
      NojIssyTlio+t5X+pWUaavrYt28f6sQKiqLhrO3i4OGDmASZomYkN2PC43Gil2QMBj2yplDX
      dZjDBzugmAETTDmqaWutwUCW22PLtB84jc8Q4eoHq09Yv0l4GzrZ3d2FXlAZvnFuy59HEJAk
      EVHUI2kqgreLV85Us7kyyeWLKY4et2MwmRAF0AR4NNidRiFfQFW1pxOAtbKSOt1WUdFkp7O9
      A4fbw7FDe5lbDaLq7HhcXsr6WphcjlDW3EubzYbDpsNsv//UEyRaOncyvxx+uNAUPOw5XI/L
      bATM7Dy6kwxgb9tP08zy1g/h3cHB5kmisoqvpZFsXiGpWuk7fhyXyUTdgf3Mzi6jSAb0ejut
      nQ3Y3Xb6dhqfbGIXBHwuEx9cz3DyiAWDUCQfiGLs2YoTabEYuXnht8y7beSkJhAEJFFAAPQO
      F97sXf75JyPYPAa8lccfVKtkolz84OfcsOqQ9A5OvqZj4eIQ/YEhxvsBcw2v/NkpKqzPMHCu
      oKexr4dz7/6Of0nKuJp2cajd/dDvXxBAM1PhzPD73/wah8eD3VELgvDAI0wQBASDl0bzML/4
      yU8xmi24q9qBj2bWEbBXN1O3dpVf//wnyKqIr20Puz0+anRD/Puv/hW9ycGe4y9SJmxdK4St
      fQfusmrE8XP8r18MY3b6OP7iaQRRvN82AxVugQvvvIG53IdRsCN82O4HfXz0syAI6AxGasus
      nP/1z8hjpPPIC5iTG7z1wTXieYG2Pe3olAQTV89xb9yCvbqDsy4Ty4K4Vb/Zg//2b/jX+c6S
      IawEQJb5kXusJ/PIhTSWsm729lTzWfNK/mcgk5llfNzC/v3Vn1quJIASgEI8sMFGJIFkclBT
      W41F/+W2kSpKhlRKwun89BG3JIAS25qv/IaYSCRCLBb7j25Gif+klEaAEtuaL/dEr0SJz8m2
      E4AcmmZ0LQtoxJZHuDKyCEA+EWV+bf2pfYFkOcj8fPThF2qRjclb/OqX/8pvPxjik+IwlPjP
      xVd+DfAxrDo2R5YoVjWzHIyQXAgS7W6kEF0nkXEifPpbswcoSpJAwEBzsxuA8Moot5dVzr78
      KkooQhb4U6TKKyY3uPD+BdZiRdz37QChKHR1NXyup5tayLARTVNV5kMUBVCyzI3e5dbwDDn0
      NO46yrHeJvTP+F2pnM9y58ZVOo++gFMPhViQsbUwvZ0d6AWV0VvnsbUep8n7x15dlYR/A9Vd
      hUNIEs1Z8Dr0208Aor4KK9dJZuuQVRP11QkCcRVLKozB1ULCP8HFC7eJqnYOnj5NpznCcEhH
      ZvY65p5X2KFb4s13+0kLMhVtX3tQb2IzRGvfKRw2PYLtswYb/CPRiiwNDuPa8zWer3WQz+XI
      p4IoioIsy4iCgCSKoKko6lY8BFHaMgZpqoqqaVuGPknaKnM/Zo5wP1+RoigPnNBS/gVm40Ze
      /u4PselVUpkCoqChqRqKqt43GG7Vo2oamqYhiCKiIKBpKqqqIQgioiSgqVupVzVNQBTYOh4Q
      70dyUBTlYbokTXvwdwBVUVA10B60d6tP4ofHAaIoIQgaqqLetxqLiKKGKsuomkYxPsv4RiNH
      ul3bTwCCaMBh1+NfWaIoeqhr9rC0PEE8rqOtzUTeL7D37Heo0q/zzug6na05ZueTdPe8SKsj
      zvvX/bzw3b/CrMwyMPKw3ny+gPCx5HJfMFqS5ayX4w1udIDOakXObBJdHueNsRukFC/f+P5L
      5Eff4f/5x7fI6Cv4xl//H+wqSzF6Z5xwIkm84OJb33uO2OISE4MDBFJQ1rKLk71Ophc2qaqo
      REIjEs1R19SAw6QDOU++UMAgygyd/zd++c5dxPJu/ua//Rj38jVuJyCzHsDavJcTnVYu/+aX
      vDOwQlXvMf7Lj15j9fpNDJVGNqJO9tYl+Pu//wWrSR0v/ej/4sXdZX+423KRxbHbjE6ukNG7
      6GjtoqNZ43/+3/8vQWMVr37/b+jyrPHer0fJ6wpYy+rZe2Q3ocEpjEdEbl+8wcj6IBszO7aj
      AEQqXC76RwepO/Zd3JYYM/63CHte5IABZjYWSXndiIqfzbAOWo34GnrpqHWiJDJogkYunSAT
      D5H5SFjZioY6rt65hWdfF2o0hrmtmU9PzvMsOmPGI8RYTRZosOlRFQUNEU9DLyd6mli5dIkY
      KUJBM3/xX/87JAIENtaRy9x4G3dxoquB5UuXiBdjzG8KvPDt75MNLTI4+fEclxajwGIkjlxb
      hlRMs7C0QlO5k03K+Nv/838gCRp2vYioM9Fx8CTtUphb0+tEQkGEiv389//xZwhoGARANFDb
      dZidYoHx/pucff2/YtenmRqbJ/sUAlDlAv5gimOvfheXLsqV342R2dHHmW99h2Bog+jKOnmv
      RHXnYfbvr2T97hX8qcLWQ8JRxfOnj2JZa+RY7zYcAUDAXVmB26/QWKZDp9opK2ujvMGFAFQ1
      tXLz5nUSvhq626rBKlIrbc03JUcFRzpDXLh8CWtFBY01DyO3umu6OJAf5eaVSxh8bZxq+4TT
      P9OumOnoq+ftd99i0mbB4Kqhq/6x6ZcmIklF/KuriGoeRe/8eD0mDxX5Id78/TImrYBiqXv8
      RHgbmjBeusrv353DoBWR7bX0uFx4JIW5xUXMBj211mo8jx3pclchyvMsLcoYDDqsVQ2IOsOW
      c6AmoNdphDbWSFpA0Z5uXi/pDXisEtfefwedlsPYeABzIsR6IERRlTBbAbXI0ugQ0YiFVNHK
      cz1G1j+swGBjfeh9LsbaS3aALzuappKOhYinixhtLpxWPbICJpOBYioFVitCJk4gmsZgsWI2
      GDCZdMjyR8rY9IRmZlkJpynk42jmZg7vqSOXl7FZLA82Ccn5FKFwDFkTsTk9OK1G5GyCYCSJ
      Julxe33o5SyK0YZJkMnki5iMBnLJGJFkFklvxlvmRs7kMNosSGgouRSBcALJZMEs6bE4LOTT
      KUw2B5IAmiKTLciYTSYENLKZJKLRhk7NEQ5HKQoGvD4vRgoEg2EKioCrrAJBnuPW1TRtPRVY
      nR5cVgO5RBrRYcOAQjQQIIe5JIASAAXWJsYZXw5gsFeyq68Xt/nL7AoHxWKUUEhHVZX9U8uV
      BFBiW7PtDGElSnyUkgBKbGtKAiixrSkJoMS2ZhvaAb5arNx5mzGtg9N7mzDk17lyr8jxvY1P
      LJvyj/LGW7dIFrKgM1PZsO9zZYlMBKY59/uLxBQJnbON7/z558sSWUhuMth/nXsrUVy1nTz/
      3CGczzKM0n3WB6+Q33GcJmtJAF96CgkdOXGGtUglTaYsodgn+6HaKnv53t/2MnP9fpbIP2x0
      /VSKqo72w1+7nyLp86IxdusK1B3lR2fKyUT9FGXgCxBALh4icz/8REkAX3IEycCOJjdzc6vU
      dd+f0WoFJm9e5M7kKgXJy6HTJ+iqdj/haI1CfI3z718kkDWw6+gZWjw5Bi73448nSIrV/Pl3
      TmNMLHHu3FXCGY2ylp2cOtqHVQdoMolwhNUVEE0OqhwCI/2XGZwL4q7v4bnjewkPvsNIIEM0
      lKH1yBmOtzq5d/sqdybXEOxODhz9Oh3VZiBGqlDNnrZykmE/qYKIxw6ZyBLXL99gLaOn5+AJ
      WvVx7s6M4l+NgaOFl189jrw6shV5z1jBoeNHsaTXCcXCTM/G2HNsDxsD55kM5HE29vHqyZ2P
      XIHSGuBLj4Cjrp2q7BJz4fsBNWPTzOXq+eb3f8zxnT6U9CfleigwdfUSyzkDZqnA4K1+Ytki
      mrWGl//ie5ysMBDRUowPztN79i/43l98A4cSehg3SC2yuTLPvXv3mFjaJLIwTdjeyg9+9EN2
      VqSYmAqSL6i07H+JH756gEI2R2p1Eb+xjtd//GNOtdqJFT709MxSKBgQUdhcnmbo+rtMhmFh
      4CKzMTBrMS70j6DkC+g8rXz7Bz/kQFmOYC7N3QvXiAtmtOgiN8cWKKYjrAaLnPz6C9S5bdjc
      XlwOE+uDpSyRX00EE429Tdy8MUjG0Imaz2Fw1WOU+IhL85OQycgODp08RJ1VQlYF9EIGl8eL
      yWDAZDZQRCEnWPBa9VBIP7phSDLTuvvwgyyR/rE7GE1GREHAYDahJWT0JjsOlw193oBep6NY
      0LC77Oh41M0ZyrEabrIe6aC17yQe03mWARUTu4+epN1nICeLEAviKXdilHSYzEZy5BEsDRw7
      eQivQUUWLeQC87R0teK16IgFpwlnKzh+opvRd2+RL2WJ/GpicdXiNlxjIpVD9LUiXfsdPx/R
      0HQmdu7v+KSj6NhVwW/e+R1DRgNVbX3sannMWU6w0F6l8Otf/Ay9wY7Z8UmuBQK+xjomL17h
      Z7cvY3JVc+xUObnJ2UdKOWu8xN67xL9c1zAbitR7P/yLjraORq6e/99cyysYjVYOvASOxmbe
      vfo20zoTjsZdnKh4fFHgprERrr79JnqzhcZdx6jXbe1DADDorSQ3LvBeyA5xmYbHW11yhfhy
      o6kqiCICGqqqomoCOiXG4OAMeU0jlkzRvvMQTRUPPVdVVQFB2gobqGkPNpmI0ocbWEAQBVBV
      EFSCC5PMBVKoch5Z5+PgwW5M4taxH5bdyhK51QZFVRFFCfH+ZhyE++3TQEmFGJ+eIydDJhGh
      Yf+LtLi3/I40TUNVla3NM6K4tcGG++0DREFEFIWtTS+CsNV3QQRUFEUBBARRQmRro48gCA/6
      92E4xQ/bpN3vf2kE+JIjiB8u44Stmw4AMx63jWimSFttK7Vlj77oFMWHjm6CICDpdI9EgXsQ
      ifB+3VaHG2tSBp2HuuZmjOLDYx8JJy8IiJL0YGfX/QY+bJ8AmMy4HHZiGZny+kM0uB5ri6RD
      esQP7wnt+1jfRXQ68QklHvbvEQTpYR2lEaDEdqaUJbLEtqY0ApTY1pTsACW2NU+1CFbzCUbv
      3GTWn6GydRcHdjY+lpXk04mszyG4W3Cb/3DZLxo5PMt0oYauKhPx1QnuJewc7qqjkIyxnsrR
      UFn5VHnCZDnM6qpEY+PW1vf42hiXrk+QFyQcNZ2cPtyJUEgwdO0KSzGN5l0H6G0q54vIk1Hi
      s/OHRwBNY2FiiLSliTOnj1AhJYnnYXnoOmvZpztJPLhK4rMk9vsiMMP65DKyVmQ5ECB8b4aY
      CrHoBtHo0697FCXOxkbqwed8IU1N13HOnjlJY26MgQ3YnBlHatjDyaO7WJ+7Ryrz7NdVcmqT
      C2/8Kz/5p5/yxuVhAv5l7k0uf+4skWoxRyAU2YodBKDkWBrr55f//E/8009/zqXhRYpfQJZI
      OZ/l1pXzxD/MEhkPMTQxvXUuTWX89gUWw5/lZlJJBQMkCipqMUksteUM9FQjgIBCNBJF7Gqi
      pcdD4N51fn/+MvKdaToPvcQBR4w1Tc/S6Cy9p0+RGrlI/1SA+p0nObJrK3Mjmop/boqMrZp6
      W55rFy6xnDJx4mtnafgDMdyfJaKhGqvaTyJTS1E101CZwB/XsKRCGB2NJAKTXLl0h4jq4NDz
      p9hhijIe1ZOeuY6x8+u0G1f43bs3SAkyZc0vfuQiSZitduwWlWXZjM0ClZWHqBIE5GwYu8W8
      9Q76mSKzPDSAsecFftDgJJfNkU+HkD9TFsVH0VSZbC6/FaBK0EgHFrgXhBe/80MceoVEuvCF
      zZ+LhcKDwFiaqlKUHyZOkosFlM+0bNUo5jKodlDSc4w/dY4wAZp6j6CfuMMbv/w57sbdnDh8
      iDPJPFLXCeqtItGhYW4H7Tx/7ASGhbvMifV85y+PM3n7AmPzDiypCDPXP8BR3crBeiOj166S
      MZXT6kxx/dwgZX9+6HO50f4xCKIBi10gHIogF61UtVjZWFujECpS3mJCytioa96BN7nBreFF
      duxUGBoKsHP3KToccT64tsrJb76OWZljaPxhvUo6wsUPfs5Nl426pnb2GLein0XW55iaCdCy
      5wA20zO+ZeQYM2kvp5u86ASw2WwomQ2WRm4wfOc8KbWC7/31y+Qmr/Bu/yyq3kbfsbPUmze5
      dv4msUKReMHHD/7L10mP3eSDO5PkCxKVnft4rsfJ3PImNVVVSGgEwxkamluwKTHuTS0hOKpp
      N+uYm7hD/9AsWMo4fvYlpIl3eH81ixaLY2/dz9f2NTA9cIWhuTC28jbOvtTH1PkbpIQECaGF
      w60q5y8PkpEFOg69zL5m22OdVImtz3M3m0YSYG0zRW+rzOJIP9cH5ylgpOPIC+zxhPm3N2+Q
      Q6Ln+Gv0lPv53c9vkTcWUW2NvPLqITaG5zAckrh57o/JEqmBho7qriO83t7H7K3LLCd2YhKE
      +7meQBB1dPQdoMolsDSpUlnnw6g34asoYyOV3rIEqnlUvQVJk0nkC1gcNiwWF31V5X9Sa5wg
      iNiMVmKBSVTHXhzGPCupYYLFWjqMAmv3pokUnbitFvL+DGCkvHk33Y0eisFVHDXVeC16Cnn9
      I09AyerhudeO0llvJD5/nbGlDPvK/UwsF+nefwDXY8n6nlFvENAe9W4RJHzNfZzd38ny+ctE
      0XAabRj0IvFEiOmZFap2WvA29/HCvg6Wzl8ilg+zEDTw2us/RkwsMzgRZyt04UfyIGtbFloE
      CT0F5lZWqLQUuHHzDlnRjuqfZHDuAPt1RrqPnGK3I82tiTVC69PcvDuL5LCxMdnP3IE+lFwG
      z+5jHK/xkt+cwWjQkc4nmByaobu572O9FCUdBoMBSQCdKKAUC2xspnn+2z/AJwa48P40qUNW
      8oKNlvYOmivNaEjU9Bzn0OFalm9dYSWRR9JUdM7PkCVyfeY2E8tp9AbIpPTstUBKjXHn4kVS
      O3dThQ7j/9/efT7Hcd95Hn93mJ6cB5hBziBAEmLOWbYs2bJ3V+XdqnOVt+r+FP8juyXZu+fa
      O7vW5T35tCIVmBMCAzIJgBhkTM7TM9Pd+wAQaUqkSkeK9pLTr2dA9fT0hM90+P36+7XKW4Wl
      ehqYuHmTxIyNUrnG0NE96Es+dg0eJzvxGfeX99Ie8jC6EsPwOnDoDl7RtO9nE0Qifgc3P5/m
      0D8EcEgp1NUoet+R7W3QKOUySHIRTd+a96JYrYiA4nZSHR7lQmIDRUihWg8+Xq2u5pmcuMrm
      IwulxCbNJ0Tmb9xkRWqmemsDFD/7DuzC+332Cpa99LmS3HwY40i3n1KhRE0XcbpcWCQZRZEw
      jDRjE1l+9Pe/RFufZGyuhiFIuNzu7WW2tsfQdARBQFNVnnUE1RB0MTX1kLbmI/T29ZKcXAJD
      INC5j1PnTuMQKhTKUJxVcLudyGIZ2SJjiCLd+9/m3Km3MNQsqgCzngjdbQ3IRpHhiVUOvfNz
      QvIGFz5ZRPvGM4t4wu0MbXeJpLC+Vdt0u2aorlfRBBHR3ccHf9tGYnmKq1/c48Q5H7LFgmDU
      yJWqWAThyXmRYVAqldB193cLQLhjJ6IjQakm4AmFCdnBP3QGeSOFzWPHHdhL9/ZhvDXUw6mj
      LuKZMk5/mAa/QsW6F8Eq07L/ODnNgq/tGLbGTYpV8AQasb3AZ/8yHJFuzv0oTNABAh6GTv4M
      wb31ZW/ZcRjZl0C0O9mhOMElsHf7HEWw+Th68gQrsQwW+w7cridz7P2tQxyQ0+iA3P8WrWEr
      hYNnsH7VUV2yY/3eLwHJtO07SPTzz/jXK2WCvfs50u9H2f41kW02DMFFV1OVP/z2f+ELNxHy
      NSNJMsr2ZTzZZkNQAvSGJvn9bz5CtjsINA0giDJ221fnZgLOSA+7Erf5+N9+japLNO88givY
      SJ93mt/9y4eINi+HzrxLg2LbukIoilgVhWC4Effc5/zmw1Hsvghn3j2LYrNu7z2tdLXY+PQ/
      /g/2cBM+lxcJAavdzlctngVJwvrVC0JAsdmx2mz0djRy5Y+/fdwo21Ha5E//eZmkKrL72Lso
      WoypKxeYnHLR2L2Hc347Sw47FkFAdEXIT3zMvy32mQNhJoASs7eGmd3MYgjQ3HuQfTvCr/Ug
      kdkl0vT/QaeUzZAtqggWGz6fF+U1H7DQ9QqqKmC3f/u5lxkAU117nfdyJtNLMwNgqmtmAEx1
      zbwj7DWnVVVqyCgWCcHQqNRAeU7nOl2rUi5XHg+ciZKC1WZ54V9BXauhqiq6sTUYardbX6o+
      kGHo1CoVqjUdQZaxKsrjy6HfJ61aAXl7YO37X73pL2nuy99zw+jhg3OHcasLfHxT5YMf7Hrm
      sqXEHJ9+NsbG+jy6r5ue7rc4dWbXC09DSa1O8emnN8DhQvJ08bP3j/IyE34Ti/e5PjJDoapj
      9zZy5PTbRF5Bv8HFqx9T3PcBu71mAF57shwmbC+wuJ5i95/VvqqUcmTzJRCtuDwubBYJZ+MA
      H/xi4KnKcIZeI5tOo+oibq8PRdQoFYqolQq6ZCPgcyEYGtl0mooGVocLl8O29cssOxk6+d6T
      ynCGjlrMkS1WsNjdeJw2aqUcpUqVStXA4fHitEpUinmyhRLICm6XB6tFBGrMzy6y8/RP6Q7Z
      qalFdHlrr1XIZinrIm63Bwsa5UqJcqmCoDjweZwYtTLZbA5dtOLxuBG0KpqhUSyoONxOqoUs
      paqOxe7G63x64qUZgNedKNM30MbDkUV6Dm+XLNHS3Dz/OXFkSvkKg0fPsK/7WXUQDXJLU1yf
      XqJaBX/rDgbaRK5+cg3R6yK5afDOL9/HMn+LLybjKIKOZgvwwx+ewWMBtCIzw3dZmPUgNfTx
      zoCTy1dHKGgChmBlz4m3yY/8BxMlL7ZSBqX3KO/tsHP50m3yNaioeboP/S0HOp1AnLzayu6A
      hZnbF1jISOw99jb21DS3xpep1Go4Wnez15Xn4tQkimAjX5A488H7VGaGmVjJUKvJtA3tI6iu
      8GB+kRwhDh0cYHXiBms5DVVs5CfvHXnqHTAD8AaweDsYDF7i/pyGjh0j9hC16ww/2xXg0fh1
      StrzhnqKTN0a4UFawyZopHUHXU09W/WBDg6wdvUaJbLMrcr8+Kc/RakWuHnr5pOHi1Za+3bT
      2RFBUBzEFqdx9e3n7b5WNhdHmZ/bIOgOc/jwGTq1R1xckkivJPEN7uNcZytr9y6w9ORVIFBC
      Q6K1fx/Kg9us50EbvcTkqhWXXKOs+ti7p5GO3YfZ09XByu2L5KtJ7l8aYd3mQq5VqAY6Cfqq
      2Jt3cnJ3L5STzBdLJGJp4isxNn506Kl3wAzAm0CQCPcM8uDz/yRv2Q8WhXIiQc3wUSoU0Z57
      YC5jdXo5duId9kWsZDM5dL2ERVEQRRFREtGQUaoZkmWdhlqBcuXp53V6AzSGwwgYJGMimVSO
      mq6RSyYRHJ1IBRnFIiPqWzWHZItGOlVEa6+RL5ThcR2uAG7rGtPzcQ70hnAoAhnA6Y1waNc5
      jnW5SaTykIqjWBUkYWv7QMHX1MGec+/R4aqRKgiUYjUa/UEUSSRZWMPw7OMXZ/1c/d2X36iS
      J/3qV7/61ff6YZj+otRcDiUcxq3YkNUMacHHQF8PpcUbXLh4k7W8QaS1i0jgyaluOZ/C4mvD
      a5MINfu48+n/5droJBVbA00hJ5om4ve7qeZyyKEIrR6NLz7+E3fnNhGsDnp6u7CKW1egdEHB
      63EiIGDz+dFXx/nThauonkGO7u1AL+Ww+sM4UMnVLLS2hkjPDHP+0hjJUpFA+25avBZAINQY
      ZOnuFT67fIsYYfYMdtAQ9DB38zyXRybJW4J0Bh1oVis+h4NKIYfoa6XVX+X6+fOMTC9hDTUT
      tAtIdiduuxVZsLA0eZEb0xu43CGa+9ux5NNIoTZ8ijkV4s2kbvLJH8+zmlWxN3Zx9vRxml74
      rrsay3evcmHkIYbkYMfBUxze2Yr8gpcnK6klPv/8IiuZKt7GTk6/fYZGx19vOMoMgKmuvfHn
      AJqmYWbc9DxvfAByuRzZbPavvRmm/6bMQyBTXTMnw5nqWt0FoLo+ypfjSQx0lse/5Hfnx9CA
      /OYKd2bmnu6A8i0qlShjY+uP/66VM9y59Cd+/eGH/PbfL5N7NZv/DYahk42vsrCwwFoiS6VS
      plAsf0tXmBenVQqsLC4w/yhKMlfmVRw7GLpONpOitn0Hu16rki8Wtz4XZH2jOwAADChJREFU
      w6CQS1P+Hity1V0AxEAY1papaBViqoy/ECNeg2wxjmg4v1NZRADDqFEuPynYlFiaYNPSw//4
      5T/ywdndPHs+5vdPjU1z4eIw8wsLzMwtkYitMTe/9tIBqBWTjE3MUPtqFLmS5vali9ydmWdx
      /gHTCyuvpDKcVlW5P3yT7cJt1HIppuYebfclM3h4/yYrmRepsFdj9f4IS3kNrbDM3OpWWcM3
      /iT46wSpEacyQTLTiV6T6ei2srGh4k4lsLXtIrV8jy+/GCWjWeg7+gNOBmJ8MquirU3RfPhn
      +FN3uTQ6R1WqEu5///F6M5tpuncfwyILCP5ndWR8BYwSk2OrHPrxT2i1SxiGQTYRpZTZZHqi
      gOAIsaMzjJpZZ2E5jmFx0t7ZiY0SyViMVCaPbg+yo7sJ1CwL81HKmoVgUzMNLivhhuB2jwyD
      RPQRWmSAd3d2IQoGum4gigZqNs58dB3BEaK3q4laeoONbIF8row30kZzwEE+sUp0PYuzoYXO
      iJtsPINOkVTRSlNAIBpdp6LLtPb04f6OP8nVYppodIWy4KCjqx2XXGXx4RzZikBjey8hh8rq
      ow1yZRVboImOiBeHvwnEAvNTY4yuNqBmmuswAKKIzWUjm16npgfwhnWy61ESCYnOIRlL0o7d
      JpOMxxgef8TJkzYy+Rqn3vl7GowUl5cc/Pwf/ydSbY7RO0/WaxjGK5m7/q2qOVbxstexVZNJ
      EAQEXWV9OYomNbE59ohA5/vI6QSZfIFaNU65ZqcrmOH61XHCnc2sjy4Q7HqHxPWrREUvrlqB
      laTKiSEfkw82aQiGECWDdKFCwOuhGn/Ix59dRWzex48PdjI9+xBVE9E2x5iwBghEb3At66fT
      XmUhXsQ11M6Dh/PoopXY6AjWHxxj8eY1kpJES9ce/Pki6VweQy9y/56Vw3sjX3uRNaJ3vuTu
      resIQNFQ+ElPhcnRG8RqLhz6AlcycCoSZ3RBpdlnIZsv4xZWGbmxQHOPm5nJRSw/OUV6bBz7
      2YNUK1WqVRW1Uq3DAAgiAZuLh3P3cPS9j9eWZy51gZhyjAMyTM89oPX4B5xVHvGH21u7yUjX
      AM0+O9VkAl0QkEWollWqfzb73dvoY3xqjraD3ej5HLrX+1Jz478Tiw2/USarweNOQ5KNrl0H
      2L27iyX1IiUq6LE48w8XKRXKeDp8tDb46Rk6xK6dHUTLFymX4qzbe3nvSB/5+CJjU6lvPJVN
      FklXVWyNffz874Lcnlkmm0wwPnaDiuxDECX6W/OErT72Hz/NDinBrdlVkpuz3Lk5jux1IMoW
      WgsgS3YOnHubiFVjfWqUxbkHFNUihiyy+xsBkGnfe5a/2S6Mdff6eWqVKvmqwKETJ/EqWa78
      +wjloX6k65dZqwZwhWtokkzLjj0cOtRE3HmVxVwVha1+xn393aTcXez7rpXh3iwCoaCDi8Nw
      6owdC1W0dAXPzgAC4PW5+eL8/+ZBwIdm6QRRxrJdIkT2BGjhHv/y69/gCjkJNx1/vNZg2yC+
      5cv860eXUbzd/PTnZ159AAQX/a0al69NcGx3E8VCGZv0tQNzo8hSTODcj/+G0vIE05vPWI/i
      wJKYZj7WgCURp1j75hlMQ3OIO5fvM+914NczFEsVrDYb3nA/e06cwCOoFGsK5J9+nM0eoLF/
      F6eO7wM1hWaBnN2D0yqAUWFpo8TBM+/h1Fe4ciX9nV62JEsIWpXV9U0q2hIpVwBLRWH/qTNo
      xQ1mZucIN3gpF7KkEwLj0Rzt7RKFJ28cqc01MlnZHAd43Rl6jfk7l7m3kCbUu5e3urwUihCJ
      BMjMzWF0dyNF73JheIFgWw/NgQBNEQf5/NYyqbk5hJ5O9EfjXBl+SE0ScQb6OHOohaWNPD0d
      bUjbx+XF+DyXr46R1610Dx3ire4G8suTfDk8jW71ceD4KXyFZcqhHhrFAtFYlkhjgLXpEYan
      V7EHWjl+aj/5pXUaetqxYlDafMCFaxPYIp20Otx07OxgY+Ehke5B7BJopTwr6QItkTASBquL
      MyihHpzqGtdvjJKVghw/eZSgkODSxRskyjL7Tr9DxDrPH38zjBLx0fXWIfb0hNicnEMZ6MNP
      keHPPmNDbzYDYAIoMX3lEtdnl7G4Ixw9fZaesPOl7u/9ayuVojx8aGNoqPFblzMDYKprdTcO
      YDL9OTMAprpmBsBU18wAmOpaHY4DvFkyKzNsEKa3xYdYzbIY0+hofvZUDDWzwt3xR3w1k8bl
      72BgZysverOkmo8xPTFLvgaivZED+/teqtOPUSuzsvCApVgeR7CFgd52rK9gUlVubZFasAO/
      Yu4BXnuxqSmGp0ZJFjVQNxmdWn3usqLFjj8QoLQ+RV4K4HHbXuoLkM8kSRU0AoEAAZ/zJb9M
      Bgv3rnB3MYvP70UobZIsvtQKnys2M/q4xa+5B3jNibKXrqDC7OI6obYn/08tT3N/Zgnd1sDA
      UD8RjwOLI0DfYABS01R7BulqAKOW597tYeKqwsC+Q4SsJZbn5lmLJak4mjh+YAeKXuT+8DCb
      BYPGzh0MdDWjSIBoIdTSxcDjynA1NuYmuL8QI9C+k7f6m8lEp4gmMiRSVbqG9tLT6CARneHe
      zAqiN8TOgd00eCxAmbUYHDt3nIDyZASiVs4ye/8u6yUrA0ND+CmyEouyupRADnZzcE83enaN
      e/emUK2NDA0NIJXSqFqZhYcbdAz2kJ6/TzRZxd8+wL6+pqffv7/Eh2R6hQSR5v5+9KUFYur2
      kE45yo2RFRq6+lGqMTY28895sMbKndusaTbscpX7o6MkcwmmZpYJtXcgLy+yrqnM3b5C0t5C
      d3uE9YUpyl/NtqjlGP3sD/zzP/0TH30yTGFllpFoju6+biprdxiP5lh9OE7c8NEVhAfRTSqb
      89yYidPW34+rFGUh+VWhoSTFcgC7WGXk/G/58KOPmI7DxoMRFnMSdiPNtbFZSvEVpqMJWnp6
      MFanWStVmR0ZIS850FNLjD1YIr25wM0rw8ihJhyyhCFZcLsUFu9OkNaenipi7gHeAKK1gcG+
      ecbvL1OjESO+gm3XMQa7HcwVVik9d6izyMLcBkWPFx1wNTYiodDSPUBPdw+O9Q2q5FlSw5w9
      3ketmGN1ZfnJw2U3+3/wd9u1QQ2Wx24T6e6hu7MJj5JnNpqgwd3I4OAArarC8pJMJp6jY2gH
      vZEwq5kHRB+vzIdVmqSsWzjwzi/onb3IfA1y8w9I0QYKuAJWQKJzcJCelhasiShlPcn8bAKx
      Q8ICBK020CXa9h7lra4IxUyU5cUYVYtAdjlFyjCeGuE2A/CG8DUPIE/+nlTND4EmiudvcL/W
      wsZSnEBfz3MeZae9w0OqEqE7YkcXn9Wv00GLvMHF0UkaxBKp0vO3IRDxcG98hslyisTKEr4d
      ZxFXF59axh20cPveNFImRWI1iex58jyRRp1b127R2ewjv5LB5odASztruQDdLR4Kmg34+s0w
      flo6nOSDrbR4BDSbBVQrTutWb7BqtYRgC9LR6qAU/eae0KwM95qTFAWH241NVvC4PHiCIcJB
      P1ItRzyZIVsqEQx3EPY/qQwnKzZcbj92i4g30kQtvkIyV8YdbKLB78Zut+Nw2JAtFuxuD26n
      lfT6OtmSSqUm09XbgSKCKEnY7A7sNgUBAYvLh19WWVpP4m8bYrDDj6Io2F1uFFlCsTnwetwI
      apbNRJ5yIYW7ZRdNHhkQ8Dc0Iasp1mIZlFA3fa0B/KFGhPwm8UwZVzBMOOjB5nBgVxQki4Ld
      5aMpEiAfWydTFghFIgTcDhwOJ1ZFRrE40dUYybKFjp5uwo1+HFY7Tq8fu2TOBXozVZJ88f8+
      5VG8SHjgCKcPD+KyvOjpXo3Nqdt8cmMSbEGO/fBdekP273zr6NdVc2tc/uIiC/EyrYPHOHOk
      H9tf/E6iJ8wAmOraM88BkskkmvbNpvUm05vmmQFQFAVdfwW3/JtM/82Yh0CmumYOhJnqmhkA
      U10zA2Cqa2YATHXNDICprpkBMNU1MwCmumYGwFTXzACY6poZAFNdMwNgqmtmAEx1zQyAqa6Z
      ATDVNTMAprpmBsBU18wAmOqaGQBTXTMDYKprZgBMdc0MgKmumQEw1TUzAKa6ZgbAVNfMAJjq
      mhkAU10zA2Cqa2YATHXNDICprpkBMNU1MwCmuvZfhH+ywzt7HjcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Renfred-Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Renfred-Length of Stay' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
